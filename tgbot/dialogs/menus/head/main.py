"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π."""

import logging
from typing import Any

from aiogram_dialog import Dialog, DialogManager
from aiogram_dialog.widgets.kbd import ManagedRadio, Row, SwitchTo
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.window import Window

from tgbot.dialogs.getters.common.db import db_getter
from tgbot.dialogs.menus.head.kpi import (
    kpi_requirements_window,
    kpi_window,
    salary_window,
)
from tgbot.dialogs.menus.head.schedule import (
    schedule_duties_window,
    schedule_group_window,
    schedule_heads_window,
    schedule_my_window,
    schedule_window,
)
from tgbot.dialogs.menus.head.search import (
    head_search_heads_window,
    head_search_no_results_window,
    head_search_query_window,
    head_search_results_window,
    head_search_specialists_window,
    head_search_user_info_window,
    head_search_window,
)
from tgbot.misc.states.dialogs.head import HeadSG

logger = logging.getLogger(__name__)


menu_window = Window(
    Format("""üëã –ü—Ä–∏–≤–µ—Ç, <b>{user.fullname}</b>!

–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –°–¢–ü

<i>–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º</i>"""),
    Row(
        SwitchTo(Const("üìÖ –ì—Ä–∞—Ñ–∏–∫–∏"), id="schedules", state=HeadSG.schedule),
        SwitchTo(Const("üåü –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏"), id="kpi", state=HeadSG.kpi),
    ),
    SwitchTo(Const("‚ù§Ô∏è –ú–æ—è –≥—Ä—É–ø–ø–∞"), id="my_group", state=HeadSG.my_group),
    SwitchTo(
        Const("‚úçÔ∏è –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤"),
        id="products_activation",
        state=HeadSG.game_products_activation,
    ),
    Row(
        SwitchTo(Const("üïµüèª –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"), id="search", state=HeadSG.search),
        SwitchTo(Const("üëØ‚Äç‚ôÄÔ∏è –ì—Ä—É–ø–ø—ã"), id="groups", state=HeadSG.groups),
    ),
    state=HeadSG.menu,
)


async def on_start(_start_data: Any, dialog_manager: DialogManager, **_kwargs):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–∏–∞–ª–æ–≥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.

    Args:
        _start_data: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –¥–∏–∞–ª–æ–≥–∞
        dialog_manager: –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∏–∞–ª–æ–≥–∞
    """
    try:
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –Ω–∞ "–ö—Ä–∞—Ç–∫–æ"
        schedule_mode: ManagedRadio = dialog_manager.find("schedule_mode")
        await schedule_mode.set_checked("compact")

        # TODO –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–≥—Ä–æ–≤–æ–≥–æ –º–µ–Ω—é
        # # –§–∏–ª—å—Ç—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç—è–º –Ω–∞ "–í—Å–µ"
        # achievement_division_filter: ManagedRadio = dialog_manager.find(
        #     "achievement_division_filter"
        # )
        # await achievement_division_filter.set_checked("all")
        #
        # # –§–∏–ª—å—Ç—Ä –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –ø–æ –ø–µ—Ä–∏–æ–¥—É –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ "–í—Å–µ"
        # achievement_period_filter: ManagedRadio = dialog_manager.find(
        #     "achievement_period_filter"
        # )
        # await achievement_period_filter.set_checked("all")

        # –§–∏–ª—å—Ç—Ä –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –Ω–∞ "–í—Å–µ"
        search_divisions: ManagedRadio = dialog_manager.find("search_divisions")
        await search_divisions.set_checked("all")
    except Exception as e:
        logger.error(f"[–î–∏–∞–ª–æ–≥–∏] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞: {e}")


head_dialog = Dialog(
    menu_window,
    schedule_window,
    schedule_my_window,
    schedule_duties_window,
    schedule_group_window,
    schedule_heads_window,
    kpi_window,
    kpi_requirements_window,
    salary_window,
    head_search_window,
    head_search_specialists_window,
    head_search_heads_window,
    head_search_query_window,
    head_search_results_window,
    head_search_no_results_window,
    head_search_user_info_window,
    on_start=on_start,
    getter=db_getter,
)
