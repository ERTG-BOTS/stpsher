from typing import List

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from infrastructure.database.repo.STP.purchase import PurchaseDetailedParams
from tgbot.keyboards.mip.game.main import (
    GameMenu,
    ProductsMenu,
    PurchaseActionMenu,
    PurchaseActivationMenu,
    create_filters_row,
)
from tgbot.keyboards.user.main import MainMenu


def purchase_activation_kb(
    current_page: int,
    total_pages: int,
    page_purchases: List[PurchaseDetailedParams] = None,
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫, –æ–∂–∏–¥–∞—é—â–∏—Ö –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    """
    buttons = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–∫—É–ø–æ–∫ (–º–∞–∫—Å–∏–º—É–º 2 –≤ —Ä—è–¥)
    if page_purchases:
        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        start_idx = (current_page - 1) * 5  # 5 –ø–æ–∫—É–ø–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É

        for i in range(0, len(page_purchases), 2):
            purchase_row = []

            # –ü–µ—Ä–≤–∞—è –ø–æ–∫—É–ø–∫–∞ –≤ —Ä—è–¥—É
            first_purchase = page_purchases[i]
            first_purchase_number = start_idx + i + 1
            purchase_row.append(
                InlineKeyboardButton(
                    text=f"{first_purchase_number}. {first_purchase.product_info.name}",
                    callback_data=PurchaseActivationMenu(
                        purchase_id=first_purchase.user_purchase.id, page=current_page
                    ).pack(),
                )
            )

            # –í—Ç–æ—Ä–∞—è –ø–æ–∫—É–ø–∫–∞ –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if i + 1 < len(page_purchases):
                second_purchase = page_purchases[i + 1]
                second_purchase_number = start_idx + i + 2
                purchase_row.append(
                    InlineKeyboardButton(
                        text=f"{second_purchase_number}. {second_purchase.product_info.name}",
                        callback_data=PurchaseActivationMenu(
                            purchase_id=second_purchase.user_purchase.id,
                            page=current_page,
                        ).pack(),
                    )
                )

            buttons.append(purchase_row)

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    if total_pages > 1:
        pagination_row = []

        # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ (‚è™ –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 2:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è™",
                    callback_data=GameMenu(menu="products_activation", page=1).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (‚¨ÖÔ∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è",
                    callback_data=GameMenu(
                        menu="products_activation", page=current_page - 1
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        pagination_row.append(
            InlineKeyboardButton(
                text=f"{current_page}/{total_pages}",
                callback_data="noop",
            )
        )

        # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚û°Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚û°Ô∏è",
                    callback_data=GameMenu(
                        menu="products_activation", page=current_page + 1
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –ü—è—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚è≠Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages - 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è≠Ô∏è",
                    callback_data=GameMenu(
                        menu="products_activation", page=total_pages
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        buttons.append(pagination_row)

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    navigation_row = [
        InlineKeyboardButton(
            text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MainMenu(menu="main").pack()
        ),
    ]
    buttons.append(navigation_row)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def purchase_detail_kb(purchase_id: int, current_page: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –ú–ò–ü —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                callback_data=PurchaseActionMenu(
                    purchase_id=purchase_id, action="approve", page=current_page
                ).pack(),
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                callback_data=PurchaseActionMenu(
                    purchase_id=purchase_id, action="reject", page=current_page
                ).pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=GameMenu(
                    menu="products_activation", page=current_page
                ).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
            ),
        ],
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def purchase_paginated_kb(
    current_page: int, total_pages: int, filters: str = "–ù–¶–ö,–ù–¢–ü"
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    """
    buttons = []

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    if total_pages > 1:
        pagination_row = []

        # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ (‚è™ –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 2:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è™",
                    callback_data=ProductsMenu(
                        menu="products_all", page=1, filters=filters
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (‚¨ÖÔ∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è",
                    callback_data=ProductsMenu(
                        menu="products_all", page=current_page - 1, filters=filters
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞)
        pagination_row.append(
            InlineKeyboardButton(
                text=f"{current_page}/{total_pages}",
                callback_data="noop",
            )
        )

        # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚û°Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚û°Ô∏è",
                    callback_data=ProductsMenu(
                        menu="products_all", page=current_page + 1, filters=filters
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –ü—è—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚è≠Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages - 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è≠Ô∏è",
                    callback_data=ProductsMenu(
                        menu="products_all", page=total_pages, filters=filters
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        buttons.append(pagination_row)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    filter_buttons = create_filters_row("products_all", filters, current_page)
    buttons.append(filter_buttons)  # –í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    navigation_row = [
        InlineKeyboardButton(
            text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MainMenu(menu="game").pack()
        ),
        InlineKeyboardButton(
            text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
        ),
    ]
    buttons.append(navigation_row)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def purchase_notify_kb() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –ú–ò–ü –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –ø–æ–∫—É–ø–∫–µ –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úçÔ∏è –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤",
                callback_data=GameMenu(menu="products_activation").pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data=MainMenu(menu="main").pack()
            ),
        ],
    ]

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=buttons,
    )
    return keyboard
