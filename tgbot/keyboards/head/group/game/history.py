from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from sqlalchemy import Sequence

from infrastructure.database.models.STP.transactions import Transaction
from tgbot.keyboards.head.group.game.main import HeadGameMenu
from tgbot.keyboards.head.group.main import GroupManagementMenu
from tgbot.keyboards.user.main import MainMenu


class HeadGroupHistoryMenu(CallbackData, prefix="head_group_history"):
    menu: str = "history"
    page: int = 1


class HeadTransactionDetailMenu(CallbackData, prefix="head_transaction_detail"):
    transaction_id: int
    page: int = 1


class HeadRankingMenu(CallbackData, prefix="head_ranking"):
    menu: str = "ranking"


def head_group_history_kb(
    transactions: Sequence[Transaction],
    current_page: int = 1,
    transactions_per_page: int = 8,
    employee_names: dict = None,
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≥—Ä—É–ø–ø—ã –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ —Ä—è–¥, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 8 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (4 —Ä—è–¥–∞).

    Args:
        transactions: –°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≥—Ä—É–ø–ø—ã
        current_page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        transactions_per_page: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        employee_names: –°–ª–æ–≤–∞—Ä—å user_id -> –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    """
    buttons = []

    if employee_names is None:
        employee_names = {}

    if not transactions:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        buttons.append(
            [
                InlineKeyboardButton(
                    text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                    callback_data=GroupManagementMenu(menu="game").pack(),
                ),
                InlineKeyboardButton(
                    text="üè† –î–æ–º–æ–π",
                    callback_data=MainMenu(menu="main").pack(),
                ),
            ]
        )
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    total_transactions = len(transactions)
    total_pages = (
        total_transactions + transactions_per_page - 1
    ) // transactions_per_page

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = (current_page - 1) * transactions_per_page
    end_idx = start_idx + transactions_per_page
    page_transactions = transactions[start_idx:end_idx]

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (2 –≤ —Ä—è–¥)
    for i in range(0, len(page_transactions), 2):
        row = []

        # –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ —Ä—è–¥—É
        transaction = page_transactions[i]
        type_emoji = "‚ûï" if transaction.type == "earn" else "‚ûñ"
        date_str = transaction.created_at.strftime("%d.%m.%y")
        amount_str = f"{transaction.amount}"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∫—Ä–∞—Ç–∫–æ
        source_icons = {
            "achievement": "üèÜ",
            "product": "üõí",
            "manual": "‚úçÔ∏è",
            "casino": "üé∞",
        }
        source_icon = source_icons.get(transaction.source_type, "‚ùì")

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        employee_name = employee_names.get(transaction.user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        if len(employee_name) > 15:
            employee_name = employee_name[:12] + "..."

        button_text = (
            f"{type_emoji} {amount_str} {source_icon} {employee_name} ({date_str})"
        )

        row.append(
            InlineKeyboardButton(
                text=button_text,
                callback_data=HeadTransactionDetailMenu(
                    transaction_id=transaction.id, page=current_page
                ).pack(),
            )
        )

        # –í—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if i + 1 < len(page_transactions):
            transaction = page_transactions[i + 1]
            type_emoji = "‚ûï" if transaction.type == "earn" else "‚ûñ"
            date_str = transaction.created_at.strftime("%d.%m.%y")
            amount_str = f"{transaction.amount}"

            source_icon = source_icons.get(transaction.source_type, "‚ùì")
            employee_name = employee_names.get(transaction.user_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            if len(employee_name) > 15:
                employee_name = employee_name[:12] + "..."

            button_text = (
                f"{type_emoji} {amount_str} {source_icon} {employee_name} ({date_str})"
            )

            row.append(
                InlineKeyboardButton(
                    text=button_text,
                    callback_data=HeadTransactionDetailMenu(
                        transaction_id=transaction.id, page=current_page
                    ).pack(),
                )
            )

        buttons.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    if total_pages > 1:
        pagination_row = []

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏: [‚è™] [‚¨ÖÔ∏è] [—Å—Ç—Ä–∞–Ω–∏—Ü–∞] [‚û°Ô∏è] [‚è≠Ô∏è]

        # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ (‚è™ –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 2:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è™", callback_data=HeadGameMenu(menu="history", page=1).pack()
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (‚¨ÖÔ∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è",
                    callback_data=HeadGameMenu(
                        menu="history", page=current_page - 1
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞)
        pagination_row.append(
            InlineKeyboardButton(
                text=f"{current_page}/{total_pages}",
                callback_data="noop",
            )
        )

        # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚û°Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚û°Ô∏è",
                    callback_data=HeadGameMenu(
                        menu="history", page=current_page + 1
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –ü—è—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚è≠Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages - 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è≠Ô∏è",
                    callback_data=HeadGameMenu(menu="history", page=total_pages).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        buttons.append(pagination_row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons.append(
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=GroupManagementMenu(menu="game").pack()
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π",
                callback_data=MainMenu(menu="main").pack(),
            ),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def head_transaction_detail_kb(page: int = 1) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≥—Ä—É–ø–ø—ã
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=HeadGameMenu(menu="history", page=page).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π",
                callback_data=MainMenu(menu="main").pack(),
            ),
        ]
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)
