from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from stp_database import Employee

from tgbot.keyboards.head.group.main import GroupManagementMenu
from tgbot.keyboards.head.group.members import short_name
from tgbot.keyboards.user.main import MainMenu


class HeadCasinoUserToggle(CallbackData, prefix="head_casino_toggle"):
    user_id: int


class HeadCasinoToggleAll(CallbackData, prefix="head_casino_all"):
    action: str  # "enable_all" or "disable_all" or "toggle_all"


def head_casino_management_kb(
    group_members: list[Employee],
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–∑–∏–Ω–æ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
    """
    buttons = []

    # –ï—Å–ª–∏ –µ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏
    if group_members:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É –≤—Å–µ—Ö –ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∫–∞–∑–∏–Ω–æ
        all_enabled = all(member.is_casino_allowed for member in group_members)
        all_disabled = all(not member.is_casino_allowed for member in group_members)

        if all_enabled:
            toggle_text = "üü† –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –≤—Å–µ–º"
            action = "disable_all"
        elif all_disabled:
            toggle_text = "üü¢ –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ–º"
            action = "enable_all"
        else:
            toggle_text = "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö"
            action = "toggle_all"

        buttons.append(
            [
                InlineKeyboardButton(
                    text=toggle_text,
                    callback_data=HeadCasinoToggleAll(action=action).pack(),
                )
            ]
        )

        # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ 2 –≤ —Ä—è–¥
        for i in range(0, len(group_members), 2):
            row = []

            # –ü–µ—Ä–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤ —Ä—è–¥—É
            member = group_members[i]
            status_emoji = "üü¢" if member.is_casino_allowed else "üî¥"
            member_text = f"{status_emoji} {short_name(member.fullname)}"

            row.append(
                InlineKeyboardButton(
                    text=member_text,
                    callback_data=HeadCasinoUserToggle(user_id=member.id).pack(),
                )
            )

            # –í—Ç–æ—Ä–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if i + 1 < len(group_members):
                member = group_members[i + 1]
                status_emoji = "üü¢" if member.is_casino_allowed else "üî¥"
                member_text = f"{status_emoji} {short_name(member.fullname)}"

                row.append(
                    InlineKeyboardButton(
                        text=member_text,
                        callback_data=HeadCasinoUserToggle(user_id=member.id).pack(),
                    )
                )

            buttons.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons.append(
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=GroupManagementMenu(menu="game").pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π",
                callback_data=MainMenu(menu="main").pack(),
            ),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=buttons)
