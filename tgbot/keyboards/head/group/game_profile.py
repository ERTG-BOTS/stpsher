from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from tgbot.keyboards.user.main import MainMenu
from tgbot.keyboards.head.group.members import HeadMemberDetailMenu


class HeadMemberGameProfileMenu(CallbackData, prefix="head_member_game_profile"):
    member_id: int
    page: int = 1


class HeadMemberGameHistoryMenu(CallbackData, prefix="head_member_game_history"):
    member_id: int
    history_page: int = 1
    page: int = 1


class HeadMemberTransactionDetailMenu(
    CallbackData, prefix="head_member_transaction_detail"
):
    member_id: int
    transaction_id: int
    history_page: int = 1
    page: int = 1


def head_member_game_profile_kb(member_id: int, page: int = 1) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="üìú –ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–∞–Ω—Å–∞",
                callback_data=HeadMemberGameHistoryMenu(
                    member_id=member_id, history_page=1, page=page
                ).pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=HeadMemberDetailMenu(
                    member_id=member_id, page=page
                ).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π",
                callback_data=MainMenu(menu="main").pack(),
            ),
        ],
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def head_member_game_history_kb(
    member_id: int,
    transactions,
    current_page: int = 1,
    page: int = 1,
    transactions_per_page: int = 8,
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≥—Ä—É–ø–ø—ã —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
    """
    buttons = []

    if not transactions:
        buttons.append(
            [
                InlineKeyboardButton(
                    text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                    callback_data=HeadMemberGameProfileMenu(
                        member_id=member_id, page=page
                    ).pack(),
                ),
                InlineKeyboardButton(
                    text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
                ),
            ]
        )
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    total_transactions = len(transactions)
    total_pages = (
        total_transactions + transactions_per_page - 1
    ) // transactions_per_page

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = (current_page - 1) * transactions_per_page
    end_idx = start_idx + transactions_per_page
    page_transactions = transactions[start_idx:end_idx]

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (2 –≤ —Ä—è–¥)
    for i in range(0, len(page_transactions), 2):
        row = []

        # –ü–µ—Ä–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ —Ä—è–¥—É
        transaction = page_transactions[i]
        type_emoji = "‚ûï" if transaction.type == "earn" else "‚ûñ"
        date_str = transaction.created_at.strftime("%d.%m.%y")
        amount_str = f"{transaction.amount}"

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∫—Ä–∞—Ç–∫–æ
        source_icons = {
            "achievement": "üèÜ",
            "product": "üõí",
            "manual": "‚úçÔ∏è",
            "casino": "üé∞",
        }
        source_icon = source_icons.get(transaction.source_type, "‚ùì")

        button_text = f"{type_emoji} {amount_str} {source_icon} ({date_str})"

        row.append(
            InlineKeyboardButton(
                text=button_text,
                callback_data=HeadMemberTransactionDetailMenu(
                    member_id=member_id,
                    transaction_id=transaction.id,
                    history_page=current_page,
                    page=page,
                ).pack(),
            )
        )

        # –í—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if i + 1 < len(page_transactions):
            transaction = page_transactions[i + 1]
            type_emoji = "‚ûï" if transaction.type == "earn" else "‚ûñ"
            date_str = transaction.created_at.strftime("%d.%m.%y")
            amount_str = f"{transaction.amount}"

            source_icon = source_icons.get(transaction.source_type, "‚ùì")
            button_text = f"{type_emoji} {amount_str} {source_icon} ({date_str})"

            row.append(
                InlineKeyboardButton(
                    text=button_text,
                    callback_data=HeadMemberTransactionDetailMenu(
                        member_id=member_id,
                        transaction_id=transaction.id,
                        history_page=current_page,
                        page=page,
                    ).pack(),
                )
            )

        buttons.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
    if total_pages > 1:
        pagination_row = []

        # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ (‚è™ –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 2:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è™",
                    callback_data=HeadMemberGameHistoryMenu(
                        member_id=member_id, history_page=1, page=page
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (‚¨ÖÔ∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è",
                    callback_data=HeadMemberGameHistoryMenu(
                        member_id=member_id, history_page=current_page - 1, page=page
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        pagination_row.append(
            InlineKeyboardButton(
                text=f"{current_page}/{total_pages}",
                callback_data="noop",
            )
        )

        # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚û°Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚û°Ô∏è",
                    callback_data=HeadMemberGameHistoryMenu(
                        member_id=member_id, history_page=current_page + 1, page=page
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –ü—è—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚è≠Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages - 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è≠Ô∏è",
                    callback_data=HeadMemberGameHistoryMenu(
                        member_id=member_id, history_page=total_pages, page=page
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        buttons.append(pagination_row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    buttons.append(
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=HeadMemberGameProfileMenu(
                    member_id=member_id, page=page
                ).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
            ),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def head_member_transaction_detail_kb(
    member_id: int, history_page: int = 1, page: int = 1
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=HeadMemberGameHistoryMenu(
                    member_id=member_id, history_page=history_page, page=page
                ).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
            ),
        ]
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)
