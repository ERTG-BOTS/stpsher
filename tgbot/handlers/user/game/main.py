from aiogram import F, Router
from aiogram.types import CallbackQuery
from stp_database import Employee
from stp_database.repo.STP.requests import MainRequestsRepo

from tgbot.keyboards.user.game.main import game_kb
from tgbot.keyboards.user.main import MainMenu, auth_kb
from tgbot.services.leveling import LevelingSystem

user_game_router = Router()
user_game_router.message.filter(F.chat.type == "private")
user_game_router.callback_query.filter(F.message.chat.type == "private")


@user_game_router.callback_query(MainMenu.filter(F.menu == "game"))
async def game_main(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    if not user:
        await callback.message.edit_text(
            """üëã –ü—Ä–∏–≤–µ—Ç

–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –°–¢–ü

–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏""",
            reply_markup=auth_kb(),
        )
        return

    user_balance = await stp_repo.transaction.get_user_balance(user_id=user.user_id)
    achievements_sum = await stp_repo.transaction.get_user_achievements_sum(
        user_id=user.user_id
    )
    purchases_sum = await stp_repo.purchase.get_user_purchases_sum(user_id=user.user_id)
    level_info_text = LevelingSystem.get_level_info_text(achievements_sum, user_balance)

    await callback.message.edit_text(
        f"""üèÆ <b>–ò–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>

{level_info_text}

<blockquote expandable><b>‚ú® –ë–∞–ª–∞–Ω—Å</b>
–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {achievements_sum} –±–∞–ª–ª–æ–≤
–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {purchases_sum} –±–∞–ª–ª–æ–≤</blockquote>""",
        reply_markup=game_kb(user),
    )
