import re

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from infrastructure.database.models import Employee
from infrastructure.database.repo.STP.requests import MainRequestsRepo
from tgbot.handlers.user.main import user_start_cmd
from tgbot.misc.helpers import generate_auth_code
from tgbot.misc.states.user.auth import Authorization
from tgbot.services.mailing import send_auth_email

user_auth_router = Router()
user_auth_router.message.filter(F.chat.type == "private")
user_auth_router.callback_query.filter(F.message.chat.type == "private")


@user_auth_router.callback_query(F.data == "auth")
async def user_auth(callback: CallbackQuery, state: FSMContext):
    await callback.answer()

    bot_message = await callback.message.edit_text("""<b>üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</b>

–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ—é —Ä–∞–±–æ—á—É—é –ø–æ—á—Ç—É

<i>–ú–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –µ–µ –Ω–∞ mail.domru.ru –Ω–∞–∂–∞–≤ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</i>""")
    await state.set_state(Authorization.email)
    await state.update_data(bot_message_id=bot_message.message_id)


@user_auth_router.message(Authorization.email)
async def user_auth_email(message: Message, state: FSMContext):
    email_pattern = r"^[A-Za-z0-9._%+-]+@dom\.ru$"
    state_data = await state.get_data()
    await message.delete()

    if not re.match(email_pattern, message.text):
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=state_data.get("bot_message_id"),
            text=f"""<b>üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</b>

–†–∞–±–æ—á–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å <code>@dom.ru</code>
–¢—ã –≤–≤–µ–ª <code>{message.text}</code>

–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ üôè

<i>–ú–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ—á—Ç—É –Ω–∞ mail.domru.ru –Ω–∞–∂–∞–≤ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</i>""",
        )
        return

    auth_code = generate_auth_code()
    bot_info = await message.bot.get_me()
    await state.update_data(email=message.text, auth_code=auth_code)
    await state.set_state(Authorization.auth_code)
    await send_auth_email(
        code=auth_code, email=message.text, bot_username=bot_info.username
    )

    await message.bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=state_data.get("bot_message_id"),
        text=f"""<b>üîê –ö–æ–¥ —Å –ø–æ—á—Ç—ã</b>

–û—Ç–ø—Ä–∞–≤–∏–ª –Ω–∞ –ø–æ—á—Ç—É <code>{message.text}</code> –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

–ù–∞–ø–∏—à–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥ –≤ —á–∞—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏

<i>–ï—Å–ª–∏ –ø–∏—Å—å–º–æ –Ω–µ –ø—Ä–∏—à–ª–æ - –ø—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫—É –°–ü–ê–ú
–ü–∏—Å—å–º–æ –ø–æ—Å—Ç—É–ø–∏—Ç –æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è <code>shedule-botntp2@mail.ru</code></i>""",
    )


@user_auth_router.message(Authorization.auth_code)
async def user_auth_code(message: Message, state: FSMContext):
    state_data = await state.get_data()

    await message.delete()
    if not message.text == state_data.get("auth_code"):
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=state_data.get("bot_message_id"),
            text=f"""<b>üîê –ö–æ–¥ —Å –ø–æ—á—Ç—ã</b>

–¢—ã –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ :(
–í–≤–µ–¥–∏ –∫–æ–¥ —Å —Ä–∞–±–æ—á–µ–π –ø–æ—á—Ç—ã <code>{state_data.get("email")}</code>

<i>–ï—Å–ª–∏ –ø–∏—Å—å–º–æ –Ω–µ –ø—Ä–∏—à–ª–æ - –ø—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫—É –°–ü–ê–ú
–ü–∏—Å—å–º–æ –ø–æ—Å—Ç—É–ø–∏—Ç –æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è <code>shedule-botntp2@mail.ru</code></i>""",
        )
        return

    await state.set_state(Authorization.fullname)
    await message.bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=state_data.get("bot_message_id"),
        text="""<b>‚úç –ü—Ä–æ–≤–µ—Ä–∫–∞ –§–ò–û</b>

–°—É–ø–µ—Ä, –∫–æ–¥ –≤–µ—Ä–Ω—ã–π. –ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–∏ –§–ò–û 

<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>""",
    )


@user_auth_router.message(Authorization.fullname)
async def user_auth_fullname(
    message: Message, state: FSMContext, stp_repo: MainRequestsRepo
):
    fullname_pattern = r"^[–ê-–Ø–∞-—è–Å—ë]+ [–ê-–Ø–∞-—è–Å—ë]+ [–ê-–Ø–∞-—è–Å—ë]+$"
    state_data = await state.get_data()
    await message.delete()

    if not re.match(fullname_pattern, message.text):
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=state_data.get("bot_message_id"),
            text="""<b>‚úç –ü—Ä–æ–≤–µ—Ä–∫–∞ –§–ò–û</b>

–§–æ—Ä–º–∞—Ç –§–ò–û –Ω–µ–≤–µ—Ä–Ω—ã–π :(
–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑

<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>""",
        )
        return

    db_user: Employee | None = await stp_repo.employee.get_user(fullname=message.text)
    if db_user:
        if not db_user.user_id:
            db_user.user_id = message.chat.id
            if message.from_user.username:
                db_user.username = message.from_user.username
            db_user.email = state_data.get("email")
            db_user.role = 1
            await stp_repo.session.commit()

            await state.clear()
            await message.bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=state_data.get("bot_message_id"),
                text="""<b>‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</b>

–°—É–ø–µ—Ä, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞. –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –±–æ—Ç–∞–º –°–¢–ü ü•≥""",
            )
            await user_start_cmd(message=message, user=db_user, stp_repo=stp_repo)
            return
        else:
            await message.bot.edit_message_text(
                chat_id=message.chat.id,
                message_id=state_data.get("bot_message_id"),
                text="""<b>‚úç –ü—Ä–æ–≤–µ—Ä–∫–∞ –§–ò–û</b>

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å —Ç–∞–∫–∏–º–∏ –§–ò–û —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑

<i>–ï—Å–ª–∏ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - –Ω–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É <code>–°–¢–ü_–†–ê–°–°–´–õ–ö–ê_–ú–ò–ü</code> —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–∏—Ç—É–∞—Ü–∏–∏</i>""",
            )
            return
    else:
        await message.bot.edit_message_text(
            chat_id=message.chat.id,
            message_id=state_data.get("bot_message_id"),
            text="""<b>‚úç –ü—Ä–æ–≤–µ—Ä–∫–∞ –§–ò–û</b>

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å —Ç–∞–∫–∏–º–∏ –§–ò–û –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑

<i>–ï—Å–ª–∏ —Ç—ã —Å—á–∏—Ç–∞–µ—à—å, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ - –Ω–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É <code>–°–¢–ü_–†–ê–°–°–´–õ–ö–ê_–ú–ò–ü</code> —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–∏—Ç—É–∞—Ü–∏–∏</i>""",
        )
        return
