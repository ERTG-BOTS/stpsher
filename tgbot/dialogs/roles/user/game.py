from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.common import sync_scroll
from aiogram_dialog.widgets.kbd import (
    Button,
    Radio,
    Row,
    ScrollingGroup,
    Select,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format, List
from aiogram_dialog.window import Window

from infrastructure.database.repo.STP.requests import MainRequestsRepo
from tgbot.dialogs.getters.user.game_getters import (
    confirmation_getter,
    product_filter_getter,
    success_getter,
)
from tgbot.dialogs.getters.user.user_getters import game_getter
from tgbot.misc.states.user.main import UserSG


async def on_product_click(
    callback, widget, dialog_manager: DialogManager, item_id, **kwargs
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –ø–æ–∫—É–ø–∫–∏
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user = dialog_manager.middleware_data["user"]

    try:
        product_info = await stp_repo.product.get_product(item_id)
    except Exception as e:
        print(e)
        await callback.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–¥–º–µ—Ç–µ", show_alert=True
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –±–∞–ª–ª–æ–≤
    if user_balance < product_info.cost:
        await callback.answer(
            f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤!\n–£ —Ç–µ–±—è: {user_balance} –±–∞–ª–ª–æ–≤\n–ù—É–∂–Ω–æ: {product_info.cost} –±–∞–ª–ª–æ–≤",
            show_alert=True,
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—Ä–æ–¥—É–∫—Ç–µ –≤ dialog_data
    dialog_manager.dialog_data["selected_product"] = {
        "id": product_info.id,
        "name": product_info.name,
        "description": product_info.description,
        "cost": product_info.cost,
        "count": product_info.count,
    }
    dialog_manager.dialog_data["user_balance"] = user_balance

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∫–Ω—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await dialog_manager.switch_to(UserSG.game_shop_confirm)


async def on_filter_change(callback, widget, dialog_manager, item_id, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ —Ñ–∏–ª—å—Ç—Ä
    """
    dialog_manager.dialog_data["product_filter"] = item_id
    await callback.answer()


async def on_confirm_purchase(
    callback, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user = dialog_manager.middleware_data["user"]
    product_info = dialog_manager.dialog_data["selected_product"]

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    if user_balance < product_info["cost"]:
        await callback.answer(
            f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤!\n–£ —Ç–µ–±—è: {user_balance}, –Ω—É–∂–Ω–æ: {product_info['cost']}",
            show_alert=True,
        )
        return

    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–∫—É–ø–∫—É —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "stored"
        new_purchase = await stp_repo.purchase.add_purchase(
            user_id=user.user_id, product_id=product_info["id"], status="stored"
        )
        await stp_repo.transaction.add_transaction(
            user_id=user.user_id,
            transaction_type="spend",
            source_type="product",
            source_id=product_info["id"],
            amount=product_info["cost"],
            comment=f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ {product_info['name']}",
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
        dialog_manager.dialog_data["new_purchase"] = {"id": new_purchase.id}
        dialog_manager.dialog_data["new_balance"] = user_balance - product_info["cost"]

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∫–Ω—É —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
        await dialog_manager.switch_to(UserSG.game_shop_success)

    except Exception:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø—Ä–µ–¥–º–µ—Ç–∞", show_alert=True)


async def on_sell_product(callback, widget, dialog_manager: DialogManager, **kwargs):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user = dialog_manager.middleware_data["user"]
    new_purchase = dialog_manager.dialog_data["new_purchase"]
    product_info = dialog_manager.dialog_data["selected_product"]

    try:
        success = await stp_repo.purchase.delete_user_purchase(new_purchase["id"])
        await stp_repo.transaction.add_transaction(
            user_id=user.user_id,
            transaction_type="earn",
            source_type="product",
            source_id=product_info["id"],
            amount=product_info["cost"],
            comment=f"–í–æ–∑–≤—Ä–∞—Ç –ø—Ä–µ–¥–º–µ—Ç–∞: {product_info['name']}",
        )

        if success:
            await callback.answer(
                f"‚úÖ –ü—Ä–æ–¥–∞–Ω–æ: {product_info['name']}.\n–í–æ–∑–≤—Ä–∞—â–µ–Ω–æ: {product_info['cost']} –±–∞–ª–ª–æ–≤"
            )
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω
            await dialog_manager.switch_to(UserSG.game_shop)
        else:
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞", show_alert=True)

    except Exception:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞", show_alert=True)


game_window = Window(
    Format("""üèÆ <b>–ò–≥—Ä–∞</b>

{level_info}

<blockquote expandable><b>‚ú® –ë–∞–ª–∞–Ω—Å</b>
–í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {achievements_sum} –±–∞–ª–ª–æ–≤
–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {purchases_sum} –±–∞–ª–ª–æ–≤</blockquote>"""),
    SwitchTo(Const("üíé –ú–∞–≥–∞–∑–∏–Ω"), id="shop", state=UserSG.game_shop),
    Row(
        Button(
            Const("üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å"),
            id="inventory",
        ),
        Button(
            Const("üé≤ –ö–∞–∑–∏–Ω–æ"),
            id="casino",
        ),
    ),
    Button(
        Const("üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è"),
        id="achievements",
    ),
    Button(
        Const("üìú –ò—Å—Ç–æ—Ä–∏—è –±–∞–ª–∞–Ω—Å–∞"),
        id="history",
    ),
    SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="menu", state=UserSG.menu),
    getter=game_getter,
    state=UserSG.game,
)

shop_window = Window(
    Format("""üíé <b>–ú–∞–≥–∞–∑–∏–Ω</b>

<b>‚ú® –¢–≤–æ–π –±–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤\n"""),
    List(
        Format("""{pos}. <b>{item[1]}</b>
<blockquote>üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: {item[3]} –±–∞–ª–ª–æ–≤
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {item[2]}
üìç –ê–∫—Ç–∏–≤–∞—Ü–∏–π: {item[3]}</blockquote>\n"""),
        items="products",
        id="shop_products",
        page_size=4,
    ),
    ScrollingGroup(
        Select(
            Format("{pos}. {item[1]}"),
            id="product",
            items="products",
            item_id_getter=lambda item: item[0],  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
            on_click=on_product_click,
        ),
        width=2,
        height=2,
        hide_on_single_page=True,
        id="shop_scroll",
        on_page_changed=sync_scroll("shop_products"),
    ),
    Row(
        Radio(
            Format("üîò {item[1]}"),
            Format("‚ö™Ô∏è {item[1]}"),
            id="shop_filter",
            item_id_getter=lambda item: item[0],
            items=[("available", "–î–æ—Å—Ç—É–ø–Ω—ã–µ"), ("all", "–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã")],
            on_click=on_filter_change,
        ),
    ),
    Row(
        SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="menu", state=UserSG.game),
        SwitchTo(Const("üè† –î–æ–º–æ–π"), id="home", state=UserSG.menu),
    ),
    getter=product_filter_getter,
    preview_data=product_filter_getter,
    state=UserSG.game_shop,
)

confirm_window = Window(
    Format("""<b>üéØ –ü–æ–∫—É–ø–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–∞:</b> {product_name}

<b>üìù –û–ø–∏—Å–∞–Ω–∏–µ</b>
{product_description}

<b>üìç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π:</b> {product_count}

<b>‚ú® –ë–∞–ª–∞–Ω—Å</b>
‚Ä¢ –¢–µ–∫—É—â–∏–π: {user_balance} –±–∞–ª–ª–æ–≤
‚Ä¢ –°–ø–∏—à–µ—Ç—Å—è: {product_cost} –±–∞–ª–ª–æ–≤
‚Ä¢ –û—Å—Ç–∞–Ω–µ—Ç—Å—è: {balance_after_purchase} –±–∞–ª–ª–æ–≤

<i>–ö—É–ø–ª–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ <b>üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä–µ</b></i>"""),
    Row(
        Button(
            Const("‚úÖ –ö—É–ø–∏—Ç—å"),
            id="confirm_buy",
            on_click=on_confirm_purchase,
        ),
        SwitchTo(
            Const("‚ùå –û—Ç–º–µ–Ω–∞"),
            id="cancel_buy",
            state=UserSG.game_shop,
        ),
    ),
    getter=confirmation_getter,
    state=UserSG.game_shop_confirm,
)

success_window = Window(
    Format("""<b>‚úÖ –ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –ø—Ä–µ–¥–º–µ—Ç:</b> {product_name}

<b>üìç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π:</b> {product_count}

<b>‚ú® –ë–∞–ª–∞–Ω—Å</b>
‚Ä¢ –ë—ã–ª: {user_balance} –±–∞–ª–ª–æ–≤
‚Ä¢ –°–ø–∏—Å–∞–Ω–æ: {product_cost} –±–∞–ª–ª–æ–≤
‚Ä¢ –°—Ç–∞–ª–æ: {new_balance} –±–∞–ª–ª–æ–≤

<b>üìù –û–ø–∏—Å–∞–Ω–∏–µ</b>
{product_description}

<i>üéØ –¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ —Å–µ–π—á–∞—Å –∏–ª–∏ –ø–æ–∑–∂–µ –≤ <b>üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä–µ</b></i>"""),
    Row(
        Button(
            Const("üí∏ –ü—Ä–æ–¥–∞—Ç—å"),
            id="sell_product",
            on_click=on_sell_product,
        ),
        SwitchTo(
            Const("üõí –í –º–∞–≥–∞–∑–∏–Ω"),
            id="back_to_shop",
            state=UserSG.game_shop,
        ),
    ),
    Row(
        SwitchTo(Const("üèÆ –ö –∏–≥—Ä–µ"), id="to_game", state=UserSG.game),
        SwitchTo(Const("üè† –î–æ–º–æ–π"), id="home", state=UserSG.menu),
    ),
    getter=success_getter,
    state=UserSG.game_shop_success,
)
