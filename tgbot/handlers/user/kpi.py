import datetime

from aiogram import F, Router
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import CallbackQuery

from infrastructure.database.models import Employee
from infrastructure.database.repo.KPI.requests import KPIRequestsRepo
from tgbot.keyboards.user.kpi import kpi_kb
from tgbot.keyboards.user.main import MainMenu

user_kpi_router = Router()
user_kpi_router.message.filter(F.chat.type == "private")
user_kpi_router.callback_query.filter(F.message.chat.type == "private")


@user_kpi_router.callback_query(MainMenu.filter(F.menu == "kpi"))
async def user_kpi_cb(
    callback: CallbackQuery, user: Employee, kpi_repo: KPIRequestsRepo
):
    premium = await kpi_repo.spec_premium.get_premium(fullname=user.fullname)
    if premium is None:
        await callback.message.edit_text(
            """üåü <b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏</b>

–ù–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —Ç–≤–æ–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –ø—Ä–µ–º–∏—É–º–µ :(""",
            reply_markup=kpi_kb(),
        )
        return

    def format_value(value, suffix=""):
        return f"{value}{suffix}" if value is not None else "‚Äî"

    def format_percentage(value):
        return f"{value}%" if value is not None else "‚Äî"

    message_text = f"""üåü <b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏</b>

üìä <b>–û—Ü–µ–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ - {format_percentage(premium.csi_premium)}</b>
<blockquote>–¢–µ–∫—É—â–∏–π: {format_value(premium.csi)}
–ù–æ—Ä–º–∞—Ç–∏–≤: {format_value(premium.csi_normative)}  
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {format_percentage(premium.csi_normative_rate)}</blockquote>

üéØ <b>–û—Ç–∫–ª–∏–∫</b>
<blockquote>–¢–µ–∫—É—â–∏–π: {format_value(premium.csi_response)}
–ù–æ—Ä–º–∞—Ç–∏–≤: {format_value(premium.csi_response_normative)}
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {format_percentage(premium.csi_response_rate)}</blockquote>

üîß <b>FLR - {format_percentage(premium.flr_premium)}</b>
<blockquote>–¢–µ–∫—É—â–∏–π: {format_value(premium.flr)}
–ù–æ—Ä–º–∞—Ç–∏–≤: {format_value(premium.flr_normative)}
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {format_percentage(premium.flr_normative_rate)}</blockquote>

‚öñÔ∏è <b>–ì–û–ö - {format_percentage(premium.gok_premium)}</b>
<blockquote>–¢–µ–∫—É—â–∏–π: {format_value(premium.gok)}
–ù–æ—Ä–º–∞—Ç–∏–≤: {format_value(premium.gok_normative)}
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {format_percentage(premium.gok_normative_rate)}</blockquote>

üéØ <b>–¶–µ–ª—å - {format_percentage(premium.target_premium)}</b>
<blockquote>–¢–∏–ø: {premium.target_type or "‚Äî"}
–§–∞–∫—Ç: {format_value(premium.target)}
–ü–ª–∞–Ω: {format_value(premium.target_goal_first)} / {format_value(premium.target_goal_second)}
–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: {format_percentage(premium.target_result_first)} / {format_percentage(premium.target_result_second)}</blockquote>

üíº <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</b>
<blockquote>–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: {format_percentage(premium.discipline_premium)}
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {format_percentage(premium.tests_premium)}
–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏: {format_percentage(premium.thanks_premium)}
–ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–æ: {format_percentage(premium.tutors_premium)}
–†—É—á–Ω–∞—è –ø—Ä–∞–≤–∫–∞: {format_percentage(premium.head_adjust_premium)}</blockquote>

üí∞ <b>–ò—Ç–æ–≥–æ:</b>
<b>–û–±—â–∞—è –ø—Ä–µ–º–∏—è: {format_percentage(premium.total_premium)}</b>

{"üìà –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: " + format_value(premium.contacts_count) if user.division == "–ù–¶–ö" else "üìà –í—Å–µ–≥–æ –∑–≤–æ–Ω–∫–æ–≤: " + format_value(premium.contacts_count)}
{"‚è∞ –ó–∞–¥–µ—Ä–∂–∫–∞: " + format_value(premium.delay, " —Å–µ–∫") if user.division != "–ù–¶–ö" else ""}
<i>–í—ã–≥—Ä—É–∂–µ–Ω–æ: {premium.updated_at.replace(tzinfo=datetime.timezone.utc).astimezone(datetime.timezone(datetime.timedelta(hours=5))).strftime("%d.%m.%y %H:%M") if premium.updated_at else "‚Äî"}</i>
<i>–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.datetime.now(datetime.timezone(datetime.timedelta(hours=5))).strftime("%d.%m.%y %H:%M")}</i>"""

    try:
        await callback.message.edit_text(message_text, reply_markup=kpi_kb())
    except TelegramBadRequest:
        await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç")
