import logging
from datetime import datetime

from aiogram import F, Router
from aiogram.types import CallbackQuery

from infrastructure.database.repo.STP.requests import MainRequestsRepo
from tgbot.filters.role import HeadFilter
from tgbot.keyboards.head.group.game.main import head_game_kb
from tgbot.keyboards.head.group.main import GroupManagementMenu
from tgbot.keyboards.head.group.members import short_name

head_game_router = Router()
head_game_router.callback_query.filter(F.message.chat.type == "private", HeadFilter())

logger = logging.getLogger(__name__)


@head_game_router.callback_query(GroupManagementMenu.filter(F.menu == "game"))
async def head_game_menu(callback: CallbackQuery, stp_repo: MainRequestsRepo):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä–æ–≤–æ–≥–æ –º–µ–Ω—é –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
    """
    current_user = await stp_repo.employee.get_user(user_id=callback.from_user.id)

    if not current_user:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥—Ä—É–ø–ø—ã
    group_stats = await stp_repo.transaction.get_group_stats_by_head(
        current_user.fullname
    )

    # –ü–æ–ª—É—á–∞–µ–º –¢–û–ü-3 –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
    all_time_top_3 = await stp_repo.transaction.get_group_all_time_top_3(
        current_user.fullname
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥—Ä—É–ø–ø–µ
    months_ru = {
        1: "—è–Ω–≤–∞—Ä—å",
        2: "—Ñ–µ–≤—Ä–∞–ª—å",
        3: "–º–∞—Ä—Ç",
        4: "–∞–ø—Ä–µ–ª—å",
        5: "–º–∞–π",
        6: "–∏—é–Ω—å",
        7: "–∏—é–ª—å",
        8: "–∞–≤–≥—É—Å—Ç",
        9: "—Å–µ–Ω—Ç—è–±—Ä—å",
        10: "–æ–∫—Ç—è–±—Ä—å",
        11: "–Ω–æ—è–±—Ä—å",
        12: "–¥–µ–∫–∞–±—Ä—å",
    }
    current_month_name = f"{months_ru[datetime.now().month]} {datetime.now().year}"

    stats_text = f"""üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã</b>

üíé <b>–û–±—â–∏–µ –±–∞–ª–ª—ã –≥—Ä—É–ø–ø—ã:</b> {group_stats["total_points"]} –±–∞–ª–ª–æ–≤
‚ö° <b>–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –≥—Ä—É–ø–ø—ã:</b> {group_stats["group_level"]}

üèÜ <b>–¢–û–ü-3 –∑–∞ {current_month_name}:</b>"""

    if group_stats["top_3_this_month"]:
        position_emojis = ["ü•á", "ü•à", "ü•â"]
        for i, user_stat in enumerate(group_stats["top_3_this_month"]):
            stats_text += f"\n{position_emojis[i]} <a href='t.me/{user_stat['username']}'>{short_name(user_stat['name'])}</a> - {user_stat['points']} –±–∞–ª–ª–æ–≤"
    else:
        stats_text += "\n<i>–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –µ—â–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</i>"

    stats_text += "\n\nüåü <b>–¢–û–ü-3 –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è:</b>"

    if all_time_top_3:
        position_emojis = ["ü•á", "ü•à", "ü•â"]
        for i, user_stat in enumerate(all_time_top_3):
            stats_text += f"\n{position_emojis[i]} <a href='t.me/{user_stat['username']}'>{short_name(user_stat['name'])}</a> - {user_stat['points']} –±–∞–ª–ª–æ–≤"
    else:
        stats_text += "\n<i>–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö</i>"

    await callback.message.edit_text(
        stats_text, reply_markup=head_game_kb(), parse_mode="HTML"
    )
    logger.info(
        f"[–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å] - [–ò–≥—Ä–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è] {callback.from_user.username} ({callback.from_user.id}): –û—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é –∏–≥—Ä–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≥—Ä—É–ø–ø—ã"
    )
