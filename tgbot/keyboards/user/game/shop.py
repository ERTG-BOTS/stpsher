from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from tgbot.keyboards.user.game.inventory import UseProductMenu
from tgbot.keyboards.user.game.main import GameMenu
from tgbot.keyboards.user.main import MainMenu


class ShopMenu(CallbackData, prefix="shop"):
    menu: str = "available"
    page: int = 1
    product_id: int = 0


class ShopBuy(CallbackData, prefix="shop_buy"):
    product_id: int
    page: int = 1


class ShopConfirm(CallbackData, prefix="shop_confirm"):
    product_id: int
    page: int = 1
    action: str  # "buy" or "back"


class ProductDetailsShop(CallbackData, prefix="product_details_shop"):
    user_product_id: int


class SellProductShopMenu(CallbackData, prefix="sell_product"):
    user_product_id: int
    source_menu: str = "shop"


def shop_kb(
    current_page: int,
    total_pages: int,
    page_products: list = None,
    filter_type: str = "available",
    user_balance: int = 0,
) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
    """
    buttons = []

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–º–∞–∫—Å–∏–º—É–º 2 –≤ —Ä—è–¥)
    if page_products:
        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        start_idx = (current_page - 1) * 5  # 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É

        for i in range(0, len(page_products), 2):
            product_row = []

            # –ü–µ—Ä–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—è–¥—É
            first_product = page_products[i]
            first_product_number = start_idx + i + 1
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏
            balance_icon = "üí∞" if user_balance >= first_product.cost else ""
            product_row.append(
                InlineKeyboardButton(
                    text=f"{first_product_number}. {balance_icon}{first_product.name}",
                    callback_data=ShopBuy(
                        product_id=first_product.id, page=current_page
                    ).pack(),
                )
            )

            # –í—Ç–æ—Ä–æ–π –ø—Ä–µ–¥–º–µ—Ç –≤ —Ä—è–¥—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if i + 1 < len(page_products):
                second_product = page_products[i + 1]
                second_product_number = start_idx + i + 2
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–æ–∫—É–ø–∫–∏
                balance_icon = "üí∞" if user_balance >= second_product.cost else ""
                product_row.append(
                    InlineKeyboardButton(
                        text=f"{second_product_number}. {balance_icon}{second_product.name}",
                        callback_data=ShopBuy(
                            product_id=second_product.id, page=current_page
                        ).pack(),
                    )
                )

            buttons.append(product_row)

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    if total_pages > 1:
        pagination_row = []

        # –ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ (‚è™ –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 2:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è™",
                    callback_data=ShopMenu(menu=filter_type, page=1).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞ (‚¨ÖÔ∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page > 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è",
                    callback_data=ShopMenu(
                        menu=filter_type, page=current_page - 1
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞)
        pagination_row.append(
            InlineKeyboardButton(
                text=f"{current_page}/{total_pages}",
                callback_data="noop",
            )
        )

        # –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚û°Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚û°Ô∏è",
                    callback_data=ShopMenu(
                        menu=filter_type, page=current_page + 1
                    ).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        # –ü—è—Ç–∞—è –∫–Ω–æ–ø–∫–∞ (‚è≠Ô∏è –∏–ª–∏ –ø—É—Å—Ç–æ)
        if current_page < total_pages - 1:
            pagination_row.append(
                InlineKeyboardButton(
                    text="‚è≠Ô∏è",
                    callback_data=ShopMenu(menu=filter_type, page=total_pages).pack(),
                )
            )
        else:
            pagination_row.append(InlineKeyboardButton(text=" ", callback_data="noop"))

        buttons.append(pagination_row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    filter_row = [
        InlineKeyboardButton(
            text=f"–¢–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ {'‚úÖ' if filter_type == 'available' else ''}",
            callback_data=ShopMenu(menu="available", page=1).pack(),
        ),
        InlineKeyboardButton(
            text=f"–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã {'‚úÖ' if filter_type == 'all' else ''}",
            callback_data=ShopMenu(menu="all", page=1).pack(),
        ),
    ]
    buttons.append(filter_row)

    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    navigation_row = [
        InlineKeyboardButton(
            text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MainMenu(menu="game").pack()
        ),
        InlineKeyboardButton(
            text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
        ),
    ]
    buttons.append(navigation_row)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def to_game_kb() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∏–≥—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=MainMenu(menu="game").pack()
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
            ),
        ],
    ]

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=buttons,
    )
    return keyboard


def product_confirmation_kb(product_id: int, current_page: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="‚úÖ –ö—É–ø–∏—Ç—å",
                callback_data=ShopConfirm(
                    product_id=product_id, page=current_page, action="buy"
                ).pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥",
                callback_data=ShopMenu(menu="available", page=current_page).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def product_purchase_success_kb(user_product_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="üéØ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å",
                callback_data=UseProductMenu(user_product_id=user_product_id).pack(),
            ),
            InlineKeyboardButton(
                text="üí∏ –í–µ—Ä–Ω—É—Ç—å",
                callback_data=SellProductShopMenu(
                    user_product_id=user_product_id, source_menu="shop"
                ).pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å",
                callback_data=GameMenu(menu="inventory").pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="üõí –ú–∞–≥–∞–∑–∏–Ω",
                callback_data=ShopMenu(menu="available", page=1).pack(),
            ),
            InlineKeyboardButton(
                text="üè† –î–æ–º–æ–π", callback_data=MainMenu(menu="main").pack()
            ),
        ],
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)
