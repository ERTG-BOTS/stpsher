from aiogram import F, Router
from aiogram.types import CallbackQuery

from infrastructure.database.models import Employee
from tgbot.filters.role import HeadFilter
from tgbot.handlers.user.schedule.main import schedule_service
from tgbot.keyboards.head.group import group_management_kb, GroupManagementMenu
from tgbot.keyboards.head.schedule.main import schedule_kb_head
from tgbot.keyboards.user.schedule.main import get_yekaterinburg_date, group_schedule_kb
from tgbot.handlers.head.schedule.group import head_group_schedule_service
from tgbot.keyboards.user.main import MainMenu

head_group_router = Router()
head_group_router.message.filter(F.chat.type == "private", HeadFilter())
head_group_router.callback_query.filter(F.message.chat.type == "private", HeadFilter())


@head_group_router.callback_query(MainMenu.filter(F.menu == "group_management"))
async def group_management_cb(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–π"""
    await callback.message.edit_text(
        """üë• <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–æ–π</b>

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø–æ–π:""",
        reply_markup=group_management_kb(),
    )


@head_group_router.callback_query(GroupManagementMenu.filter(F.menu == "schedule"))
async def group_mgmt_schedule_cb(callback: CallbackQuery, user: Employee, stp_repo):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –∏–∑ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    if not await schedule_service.check_user_auth(callback, user):
        return

    try:
        current_date = get_yekaterinburg_date()

        # –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
        (
            text,
            total_pages,
            has_prev,
            has_next,
        ) = await head_group_schedule_service.get_group_schedule_for_head(
            user, current_date, 1, stp_repo
        )

        await callback.message.edit_text(
            text=text,
            reply_markup=group_schedule_kb(
                current_date=current_date,
                page=1,
                total_pages=total_pages,
                has_prev=has_prev,
                has_next=has_next,
                user_type="head",
                from_group_mgmt=True,
            ),
        )

    except Exception as e:
        await schedule_service.handle_schedule_error(callback, e)


@head_group_router.callback_query(GroupManagementMenu.filter(F.menu == "kpi_members"))
async def group_mgmt_kpi_members_cb(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ KPI —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã"""
    await callback.message.edit_text(
        """üìä <b>KPI –≥—Ä—É–ø–ø—ã</b>

<i>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>

–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.""",
        reply_markup=group_management_kb(),
    )


@head_group_router.callback_query(GroupManagementMenu.filter(F.menu == "game"))
async def group_mgmt_game_cb(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–≥—Ä–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≥—Ä—É–ø–ø—ã"""
    await callback.message.edit_text(
        """üèÆ <b>–ò–≥—Ä–∞</b>

<i>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>"""
    )


@head_group_router.callback_query(GroupManagementMenu.filter(F.menu == "members"))
async def group_mgmt_members_cb(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Å—Ç–∞–≤–∞ –≥—Ä—É–ø–ø—ã"""
    await callback.message.edit_text(
        """üë• <b>–°–æ—Å—Ç–∞–≤ –≥—Ä—É–ø–ø—ã</b>

<i>–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>

–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –ø–æ–ª–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, —Ä–æ–ª—è–º–∏ –∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.""",
        reply_markup=group_management_kb(),
    )
