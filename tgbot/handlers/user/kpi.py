from aiogram import F, Router
from aiogram.types import CallbackQuery

from infrastructure.database.models import Employee
from infrastructure.database.repo.KPI.requests import KPIRequestsRepo
from tgbot.keyboards.user.kpi import kpi_kb
from tgbot.keyboards.user.main import MainMenu

user_kpi_router = Router()
user_kpi_router.message.filter(F.chat.type == "private")
user_kpi_router.callback_query.filter(F.message.chat.type == "private")


@user_kpi_router.callback_query(MainMenu.filter(F.menu == "kpi"))
async def user_kpi_cb(
    callback: CallbackQuery, user: Employee, kpi_repo: KPIRequestsRepo
):
    day_kpi = await kpi_repo.spec_day_kpi.get_kpi(fullname=user.fullname)

    contact_type = "—á–∞—Ç–æ–≤" if user.division == "–ù–¶–ö" else "–∑–≤–æ–Ω–∫–æ–≤"

    await callback.message.edit_text(
        f"""üöß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª KPI –æ–≥—Ä–∞–Ω–∏—á–µ–Ω

<b>üìä –í—Å–µ–≥–æ {contact_type}:</b> {day_kpi.contacts_count}

‚ö°Ô∏è <b>AHT:</b> {day_kpi.aht if day_kpi.aht else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
üõ†Ô∏è <b>FLR:</b> {day_kpi.flr if day_kpi.flr else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
ü•á <b>–û—Ü–µ–Ω–∫–∞:</b> {day_kpi.csi if day_kpi.csi else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
ü•± <b>–û—Ç–∫–ª–∏–∫:</b> {day_kpi.pok if day_kpi.pok else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}""",
        reply_markup=kpi_kb(),
    )
