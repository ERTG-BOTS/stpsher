import asyncio
import logging
from functools import lru_cache
from typing import List

from aiogram import F, Router
from aiogram.types import CallbackQuery
from stp_database import Employee
from stp_database.repo.STP.requests import MainRequestsRepo

from tgbot.filters.casino import IsCasinoAllowed
from tgbot.keyboards.user.game.casino import (
    CasinoMenu,
    back_to_casino_kb,
    betting_kb,
    casino_main_kb,
    play_again_kb,
)
from tgbot.keyboards.user.game.main import GameMenu

user_game_casino_router = Router()
user_game_casino_router.message.filter(
    F.chat.type == "private",
)
user_game_casino_router.callback_query.filter(F.message.chat.type == "private")

logger = logging.getLogger(__name__)


@lru_cache(maxsize=64)
def get_score_change(dice_value: int) -> int:
    if dice_value in (1, 22, 43):  # three-of-a-kind (except 777)
        return 7
    elif dice_value in (
        16,
        32,
        48,
        52,
        56,
        60,
        61,
        62,
        63,
    ):  # all combinations with two 7's
        return 5
    elif dice_value == 64:  # jackpot (777)
        return 10
    else:
        return -1


@lru_cache(maxsize=64)
def get_combo_parts(dice_value: int) -> List[str]:
    values = ["bar", "grapes", "lemon", "seven"]

    dice_value -= 1
    result = []
    for _ in range(3):
        result.append(values[dice_value % 4])
        dice_value //= 4
    return result


@lru_cache(maxsize=64)
def get_combo_text(dice_value: int) -> str:
    parts: List[str] = get_combo_parts(dice_value)
    emoji_map = {"bar": "üç´", "grapes": "üçá", "lemon": "üçã", "seven": "7Ô∏è‚É£"}

    emoji_parts = [emoji_map.get(part, part) for part in parts]
    return " ".join(emoji_parts)


def get_slot_result_multiplier(slot_value: int) -> tuple[str, float]:
    score_change = get_score_change(slot_value)
    combo_text = get_combo_text(slot_value)

    if score_change == 10:  # –î–∂–µ–∫–ø–æ—Ç (777)
        return f"üé∞ {combo_text} - –î–∂–µ–∫–ø–æ—Ç! üé∞", 5.0
    elif score_change == 7:  # –¢—Ä–∏ –≤ —Ä—è–¥ –ª—é–±—ã—Ö
        return f"üî• {combo_text} - –¢—Ä–∏ –≤ —Ä—è–¥! üî•", 3.5
    elif score_change == 5:  # –î–≤–µ —Å–µ–º–µ—Ä–∫–∏
        return f"‚ú® {combo_text} - –î–≤–µ —Å–µ–º–µ—Ä–∫–∏! ‚ú®", 2.5
    else:  # loss
        return f"{combo_text}", 0.0


def get_dice_result_multiplier(dice_value: int) -> tuple[str, float]:
    # –ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ 5 –∏ 6. –®–∞–Ω—Å –ø–æ–±–µ–¥—ã - 33%
    if dice_value == 6:
        return f"üé≤ {dice_value} - –î–∂–µ–∫–ø–æ—Ç! üé≤", 2.0
    if dice_value == 5:
        return f"üé≤ {dice_value} - –ú–Ω–æ–∂–∏—Ç–µ–ª—å 1.5x! üé≤", 1.5
    if dice_value == 4:
        return f"üé≤ {dice_value} - –£—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑ üé≤", 0.75
    else:
        return f"üé≤ {dice_value}", 0.0


def get_darts_result_multiplier(dice_value: int) -> tuple[str, float]:
    # –ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ 5 –∏ 6. –®–∞–Ω—Å –ø–æ–±–µ–¥—ã - 33%
    if dice_value == 6:
        return f"üéØ {dice_value} - –î–∂–µ–∫–ø–æ—Ç! üéØ", 2.0
    if dice_value == 5:
        return f"üéØ {dice_value} - –ü–æ—á—Ç–∏ –ø–æ–ø–∞–ª–∏! üéØ", 1.5
    if dice_value == 4:
        return f"üéØ {dice_value} - –£—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑ üéØ", 0.75
    else:
        return f"üéØ {dice_value}", 0.0


def get_bowling_result_multiplier(dice_value: int) -> tuple[str, float]:
    # –ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ–ª—å–∫–æ 5 –∏ 6. –®–∞–Ω—Å –ø–æ–±–µ–¥—ã - 33%
    if dice_value == 6:
        return f"üé≥ {dice_value} - –í—Å–µ –∫–µ–≥–ª–∏ —Å–±–∏—Ç—ã! üé≥", 2.0
    elif dice_value == 5:
        return f"üé≥ {dice_value} - –°–±–∏—Ç–æ 5 –∫–µ–≥–ª–µ–π! üé≥", 1.5
    elif dice_value == 4:
        return f"üé≥ {dice_value} - –£—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑! üé≥", 0.75
    else:
        return f"üé≥ {dice_value}", 0.0


@user_game_casino_router.callback_query(
    GameMenu.filter(F.menu == "casino"), IsCasinoAllowed()
)
async def casino_main_menu(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ"""
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    await callback.message.edit_text(
        f"""üé∞ <b>–ö–∞–∑–∏–Ω–æ</b>

üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤

–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ

üçÄ <b>–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É!</b>""",
        reply_markup=casino_main_kb(),
    )

    logger.info(
        f"[–ö–∞–∑–∏–Ω–æ] {callback.from_user.username} ({callback.from_user.id}) –æ—Ç–∫—Ä—ã–ª –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ"
    )


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "main"), IsCasinoAllowed()
)
async def casino_main_menu_back(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–∞–∑–∏–Ω–æ"""
    await casino_main_menu(callback, user, stp_repo)


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "slots"), IsCasinoAllowed()
)
async def casino_slot_betting(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """–í—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –¥–ª—è –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã"""
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    if user_balance < 10:
        await callback.message.edit_text(
            """üíî <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>

–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 10 –±–∞–ª–ª–æ–≤
–í—ã–ø–æ–ª–Ω—è–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –±–∞–ª–ª–æ–≤!""",
            reply_markup=back_to_casino_kb(),
        )
        return

    await callback.message.edit_text(
        f"""üé∞ <b>–ö–∞–∑–∏–Ω–æ - –°–ª–æ—Ç—ã</b>

‚ú® <b>–ë–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤

üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å</b>
1. –ù–∞–∑–Ω–∞—á—å —Å—Ç–∞–≤–∫—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
2. –ñ–º–∏ <b>üé∞ –ö—Ä—É—Ç–∏—Ç—å üé∞</b>

<blockquote expandable>üíé <b>–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≥—Ä–∞–¥:</b>
üé∞ –î–∂–µ–∫–ø–æ—Ç - –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏ ‚Üí x5.0
üî• –¢—Ä–∏ –≤ —Ä—è–¥ ‚Üí x3.5
‚ú® –î–≤–µ —Å–µ–º–µ—Ä–∫–∏ ‚Üí x2.5</blockquote>""",
        reply_markup=betting_kb(user_balance, game_type="slots"),
    )


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "dice"), IsCasinoAllowed()
)
async def casino_dice_betting(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """–í—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –¥–ª—è –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏"""
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    if user_balance < 10:
        await callback.message.edit_text(
            """üíî <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>

–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 10 –±–∞–ª–ª–æ–≤
–í—ã–ø–æ–ª–Ω—è–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –±–∞–ª–ª–æ–≤!""",
            reply_markup=back_to_casino_kb(),
        )
        return

    await callback.message.edit_text(
        f"""üé≤ <b>–ö–∞–∑–∏–Ω–æ - –ö–æ—Å—Ç–∏</b>

‚ú® <b>–ë–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤

üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å</b>
1. –ù–∞–∑–Ω–∞—á—å —Å—Ç–∞–≤–∫—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
2. –ñ–º–∏ <b>üé≤ –ö–∏–Ω—É—Ç—å üé≤</b>

<blockquote expandable>üíé <b>–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≥—Ä–∞–¥:</b>
¬∑ –í—ã–ø–∞–ª–æ 6 ‚Üí 2x
¬∑ –í—ã–ø–∞–ª–æ 5 ‚Üí 1.5x
¬∑ –í—ã–ø–∞–ª–æ 4 ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)

–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–Ω—ã–µ</blockquote>""",
        reply_markup=betting_kb(user_balance, game_type="dice"),
    )


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "darts"), IsCasinoAllowed()
)
async def casino_darts_betting(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """–í—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –¥–ª—è –∏–≥—Ä—ã –≤ –¥–∞—Ä—Ç—Å"""
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    if user_balance < 10:
        await callback.message.edit_text(
            """üíî <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>

–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 10 –±–∞–ª–ª–æ–≤
–í—ã–ø–æ–ª–Ω—è–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –±–∞–ª–ª–æ–≤!""",
            reply_markup=back_to_casino_kb(),
        )
        return

    await callback.message.edit_text(
        f"""üéØ <b>–ö–∞–∑–∏–Ω–æ - –î–∞—Ä—Ç—Å</b>

‚ú® <b>–ë–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤

üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å</b>
1. –ù–∞–∑–Ω–∞—á—å —Å—Ç–∞–≤–∫—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
2. –ñ–º–∏ <b>üéØ –ë—Ä–æ—Å–∏—Ç—å üéØ</b>

<blockquote expandable>üíé <b>–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≥—Ä–∞–¥:</b>
¬∑ –í —è–±–ª–æ—á–∫–æ ‚Üí 2x
¬∑ 1 –∫–æ–ª—å—Ü–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ ‚Üí 1.5x
¬∑ 2 –∫–æ–ª—å—Ü–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)

–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–Ω—ã–µ</blockquote>""",
        reply_markup=betting_kb(user_balance, game_type="darts"),
    )


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "bowling"), IsCasinoAllowed()
)
async def casino_bowling_betting(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """–í—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ –¥–ª—è –∏–≥—Ä—ã –≤ –±–æ—É–ª–∏–Ω–≥"""
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    if user_balance < 10:
        await callback.message.edit_text(
            """üíî <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>

–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ - 10 –±–∞–ª–ª–æ–≤
–í—ã–ø–æ–ª–Ω—è–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –±–∞–ª–ª–æ–≤!""",
            reply_markup=back_to_casino_kb(),
        )
        return

    await callback.message.edit_text(
        f"""üé≥ <b>–ö–∞–∑–∏–Ω–æ - –ë–æ—É–ª–∏–Ω–≥</b>

‚ú® <b>–ë–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤

üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å</b>
1. –ù–∞–∑–Ω–∞—á—å —Å—Ç–∞–≤–∫—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
2. –ñ–º–∏ <b>üé≥ –ö–∞—Ç–∏—Ç—å üé≥</b>

<blockquote expandable>üíé <b>–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≥—Ä–∞–¥:</b>
¬∑ –°—Ç—Ä–∞–π–∫ ‚Üí 2x
¬∑ 5 –∫–µ–≥–ª–µ–π ‚Üí 1.5x
¬∑ 4 –∫–µ–≥–ª–∏ ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)

–û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–Ω—ã–µ</blockquote>""",
        reply_markup=betting_kb(user_balance, game_type="bowling"),
    )


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "rate"), IsCasinoAllowed()
)
async def casino_rate_adjustment(
    callback: CallbackQuery,
    callback_data: CasinoMenu,
    user: Employee,
    stp_repo: MainRequestsRepo,
):
    """–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Å—Ç–∞–≤–∫–∏"""
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)
    new_rate = callback_data.current_rate
    game_type = callback_data.game_type

    game_info = {
        "dice": {
            "title": "üé≤ <b>–ö–∞–∑–∏–Ω–æ - –ö–æ—Å—Ç–∏</b>",
            "action": "üé≤ –ö–∏–Ω—É—Ç—å üé≤",
            "rewards": """¬∑ –í—ã–ø–∞–ª–æ 6 ‚Üí 2x
¬∑ –í—ã–ø–∞–ª–æ 5 ‚Üí 1.5x
¬∑ –í—ã–ø–∞–ª–æ 4 ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)""",
        },
        "darts": {
            "title": "üéØ <b>–ö–∞–∑–∏–Ω–æ - –î–∞—Ä—Ç—Å</b>",
            "action": "üéØ –ë—Ä–æ—Å–∏—Ç—å üéØ",
            "rewards": """¬∑ –í —è–±–ª–æ—á–∫–æ ‚Üí 2x
¬∑ 1 –∫–æ–ª—å—Ü–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ ‚Üí 1.5x
¬∑ 2 –∫–æ–ª—å—Ü–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)""",
        },
        "bowling": {
            "title": "üé≥ <b>–ö–∞–∑–∏–Ω–æ - –ë–æ—É–ª–∏–Ω–≥</b>",
            "action": "üé≥ –ö–∞—Ç–∏—Ç—å üé≥",
            "rewards": """¬∑ –°—Ç—Ä–∞–π–∫ ‚Üí 2x
¬∑ 5 –∫–µ–≥–ª–µ–π ‚Üí 1.5x
¬∑ 4 –∫–µ–≥–ª–∏ ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)""",
        },
        "slots": {
            "title": "üé∞ <b>–ö–∞–∑–∏–Ω–æ - –°–ª–æ—Ç—ã</b>",
            "action": "üé∞ –ö—Ä—É—Ç–∏—Ç—å üé∞",
            "rewards": """üé∞ –î–∂–µ–∫–ø–æ—Ç - –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏ ‚Üí x5.0
üî• –¢—Ä–∏ –≤ —Ä—è–¥ ‚Üí x3.5
‚ú® –î–≤–µ —Å–µ–º–µ—Ä–∫–∏ ‚Üí x2.5""",
        },
    }

    info = game_info.get(game_type, game_info["slots"])
    await callback.message.edit_text(
        f"""{info["title"]}

‚ú® <b>–ë–∞–ª–∞–Ω—Å:</b> {user_balance} –±–∞–ª–ª–æ–≤

üéÆ <b>–ö–∞–∫ –∏–≥—Ä–∞—Ç—å</b>
1. –ù–∞–∑–Ω–∞—á—å —Å—Ç–∞–≤–∫—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
2. –ñ–º–∏ <b>{info["action"]}</b>

<blockquote expandable>üíé <b>–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≥—Ä–∞–¥:</b>
{info["rewards"]}</blockquote>""",
        reply_markup=betting_kb(user_balance, new_rate, game_type),
    )


@user_game_casino_router.callback_query(
    CasinoMenu.filter(F.menu == "bet"), IsCasinoAllowed()
)
async def casino_game(
    callback: CallbackQuery,
    callback_data: CasinoMenu,
    user: Employee,
    stp_repo: MainRequestsRepo,
):
    """–ò–≥—Ä–∞ –≤ –∫–∞–∑–∏–Ω–æ (—Å–ª–æ—Ç—ã –∏–ª–∏ –∫–æ—Å—Ç–∏)"""
    bet_amount = callback_data.bet_amount
    game_type = callback_data.game_type
    user_balance = await stp_repo.transaction.get_user_balance(user.user_id)

    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
    if bet_amount > user_balance:
        await callback.message.edit_text(
            """‚ùå <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!</b>

–í—ã–±–µ—Ä–∏ —Å—Ç–∞–≤–∫—É –ø–æ–º–µ–Ω—å—à–µ –∏–ª–∏ –∑–∞—Ä–∞–±–æ—Ç–∞–π –±–æ–ª—å—à–µ –±–∞–ª–ª–æ–≤!""",
            reply_markup=back_to_casino_kb(),
        )
        return

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∏–≥—Ä
    game_config = {
        "dice": {
            "loading_text": "üé≤ <b>–ö–∏–¥–∞–µ–º –∫–æ—Å—Ç–∏...</b>",
            "emoji": "üé≤",
            "multiplier_func": get_dice_result_multiplier,
            "game_name": "–∫–æ—Å—Ç—è—Ö",
            "rewards": """¬∑ –í—ã–ø–∞–ª–æ 6 ‚Üí 2x
¬∑ –í—ã–ø–∞–ª–æ 5 ‚Üí 1.5x
¬∑ –í—ã–ø–∞–ª–æ 4 ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)""",
        },
        "darts": {
            "loading_text": "üéØ <b>–ë—Ä–æ—Å–∞–µ–º –¥–∞—Ä—Ç—Å...</b>",
            "emoji": "üéØ",
            "multiplier_func": get_darts_result_multiplier,
            "game_name": "–¥–∞—Ä—Ç—Å–µ",
            "rewards": """¬∑ –í —è–±–ª–æ—á–∫–æ ‚Üí 2x
¬∑ 1 –∫–æ–ª—å—Ü–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ ‚Üí 1.5x
¬∑ 2 –∫–æ–ª—å—Ü–æ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)""",
        },
        "bowling": {
            "loading_text": "üé≥ <b>–ö–∞—Ç–∏–º —à–∞—Ä...</b>",
            "emoji": "üé≥",
            "multiplier_func": get_bowling_result_multiplier,
            "game_name": "–±–æ—É–ª–∏–Ω–≥–µ",
            "rewards": """¬∑ –°—Ç—Ä–∞–π–∫ ‚Üí 2x
¬∑ 5 –∫–µ–≥–ª–µ–π ‚Üí 1.5x
¬∑ 4 –∫–µ–≥–ª–∏ ‚Üí 0.75x (—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑)""",
        },
        "slots": {
            "loading_text": "üé∞ <b>–ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω...</b>",
            "emoji": "üé∞",
            "multiplier_func": get_slot_result_multiplier,
            "game_name": "—Å–ª–æ—Ç–∞—Ö",
            "rewards": """üé∞ –î–∂–µ–∫–ø–æ—Ç - –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏ ‚Üí x5.0
üî• –¢—Ä–∏ –≤ —Ä—è–¥ ‚Üí x3.5
‚ú® –î–≤–µ —Å–µ–º–µ—Ä–∫–∏ ‚Üí x2.5""",
        },
    }

    config = game_config.get(game_type, game_config["slots"])

    # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –æ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã
    await callback.message.edit_text(
        f"""{config["loading_text"]}

üí∞ <b>–°—Ç–∞–≤–∫–∞:</b> {bet_amount} –±–∞–ª–ª–æ–≤
‚è∞ <b>–ñ–¥–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...</b>

<blockquote expandable>üíé <b>–¢–∞–±–ª–∏—Ü–∞ –Ω–∞–≥—Ä–∞–¥:</b>
{config["rewards"]}</blockquote>"""
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∏–≥—Ä—É
    game_result = await callback.message.answer_dice(emoji=config["emoji"])
    game_value = game_result.dice.value

    # –ñ–¥–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (–æ–∫–æ–ª–æ 3 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∫—É–±–∏–∫–∞ –∏ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∫–∞–∑–∏–Ω–æ)
    if game_type == "dice":
        await asyncio.sleep(3)
    else:
        await asyncio.sleep(2)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result_text, multiplier = config["multiplier_func"](game_value)
    game_name = config["game_name"]

    if multiplier > 0:
        # –í—ã–∏–≥—Ä—ã—à
        winnings = int(bet_amount * multiplier)
        net_result = winnings - bet_amount

        if net_result > 0:
            # –ß–∏—Å—Ç—ã–π –≤—ã–∏–≥—Ä—ã—à - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º earn —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            transaction, new_balance = await stp_repo.transaction.add_transaction(
                user_id=user.user_id,
                transaction_type="earn",
                source_type="casino",
                amount=net_result,
                comment=f"–í—ã–∏–≥—Ä—ã—à –≤ {game_name}: {result_text} (x{multiplier})",
            )
        else:
            # –£—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑ –º–µ–Ω—å—à–µ —Å—Ç–∞–≤–∫–∏ - –∑–∞–ø–∏—Å—ã–≤–∞–µ–º spend —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            transaction, new_balance = await stp_repo.transaction.add_transaction(
                user_id=user.user_id,
                transaction_type="spend",
                source_type="casino",
                amount=abs(net_result),
                comment=f"–£—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑ –≤ {game_name}: {result_text} (x{multiplier})",
            )

        final_result = f"""üéâ <b>–ü–æ–±–µ–¥–∞</b> üéâ

{result_text}

üî• –í—ã–∏–≥—Ä—ã—à: {bet_amount} x{multiplier} = {winnings} –±–∞–ª–ª–æ–≤!
‚ú® –ë–∞–ª–∞–Ω—Å: {user_balance - bet_amount} ‚Üí {new_balance} –±–∞–ª–ª–æ–≤"""

        logger.info(
            f"[–ö–∞–∑–∏–Ω–æ] {callback.from_user.username} –≤—ã–∏–≥—Ä–∞–ª {winnings} –±–∞–ª–ª–æ–≤ –≤ {game_name} ({result_text})"
        )

    else:
        # –ü—Ä–æ–∏–≥—Ä—ã—à
        # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
        transaction, new_balance = await stp_repo.transaction.add_transaction(
            user_id=user.user_id,
            transaction_type="spend",
            source_type="casino",
            amount=bet_amount,
            comment=f"–ü—Ä–æ–∏–≥—Ä—ã—à –≤ {game_name}: {result_text}",
        )

        final_result = f"""üíî <b>–ü—Ä–æ–∏–≥—Ä—ã—à</b>

{result_text}

üí∏ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: -{bet_amount} –±–∞–ª–ª–æ–≤
‚ú® –ë–∞–ª–∞–Ω—Å: {new_balance + bet_amount} ‚Üí {new_balance} –±–∞–ª–ª–æ–≤

<i>–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ - —É–¥–∞—á–∞ —Ä—è–¥–æ–º!</i>"""

        logger.info(
            f"[–ö–∞–∑–∏–Ω–æ] {callback.from_user.username} –ø—Ä–æ–∏–≥—Ä–∞–ª {bet_amount} –±–∞–ª–ª–æ–≤ –≤ {game_name} ({result_text})"
        )

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await callback.message.answer(
        final_result,
        reply_markup=play_again_kb(bet_amount, game_type),
    )
