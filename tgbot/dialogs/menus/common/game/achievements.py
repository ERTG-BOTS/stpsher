"""–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π."""

from aiogram_dialog.widgets.kbd import (
    CurrentPage,
    FirstPage,
    LastPage,
    NextPage,
    PrevPage,
    Radio,
    Row,
    SwitchTo,
)
from aiogram_dialog.widgets.text import Const, Format, List
from aiogram_dialog.window import Window

from tgbot.dialogs.events.common.filters import on_filter_change
from tgbot.dialogs.states.user import UserSG


def create_achievements_windows(state_group, menu_state, achievements_filter_getter):
    """–°–æ–∑–¥–∞–µ—Ç –æ–∫–Ω–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π.

    Args:
        state_group: –ì—Ä—É–ø–ø–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–∫–æ–Ω
        menu_state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        achievements_filter_getter: –ì–µ—Ç—Ç–µ—Ä –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π

    Returns:
        –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    """
    is_user = state_group == UserSG

    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏–ª–∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ)
    if is_user:
        first_filter = Radio(
            Format("üîò {item[1]}"),
            Format("‚ö™Ô∏è {item[1]}"),
            id="achievement_position_filter",
            item_id_getter=lambda item: item[0],
            items="position_radio_data",
            on_click=on_filter_change,
        )
    else:
        first_filter = Radio(
            Format("üîò {item[1]}"),
            Format("‚ö™Ô∏è {item[1]}"),
            id="achievement_division_filter",
            item_id_getter=lambda item: item[0],
            items="division_radio_data",
            on_click=on_filter_change,
        )

    achievements_window = Window(
        Format("""üéØ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>

–ó–¥–µ—Å—å –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å
"""),
        List(
            Format("""{pos}. <b>{item[1]}</b>
<blockquote>üèÖ –ù–∞–≥—Ä–∞–¥–∞: {item[2]} –±–∞–ª–ª–æ–≤
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {item[3]}
üî∞ –î–æ–ª–∂–Ω–æ—Å—Ç—å: {item[4]}
üïí –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ: {item[5]}</blockquote>\n"""),
            items="achievements",
            id="achievements_list",
            page_size=4,
        ),
        Const("<i>–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤</i>"),
        Row(
            FirstPage(
                scroll="achievements_list",
                text=Format("1"),
            ),
            PrevPage(
                scroll="achievements_list",
                text=Format("<"),
            ),
            CurrentPage(
                scroll="achievements_list",
                text=Format("{current_page1}"),
            ),
            NextPage(
                scroll="achievements_list",
                text=Format(">"),
            ),
            LastPage(
                scroll="achievements_list",
                text=Format("{target_page1}"),
            ),
        ),
        first_filter,
        Radio(
            Format("üîò {item[1]}"),
            Format("‚ö™Ô∏è {item[1]}"),
            id="achievement_period_filter",
            item_id_getter=lambda item: item[0],
            items="period_radio_data",
            on_click=on_filter_change,
        ),
        Row(
            SwitchTo(Const("‚Ü©Ô∏è –ù–∞–∑–∞–¥"), id="menu", state=menu_state),
            SwitchTo(Const("üè† –î–æ–º–æ–π"), id="home", state=menu_state),
        ),
        getter=achievements_filter_getter,
        state=state_group.game_achievements,
    )

    return (achievements_window,)
