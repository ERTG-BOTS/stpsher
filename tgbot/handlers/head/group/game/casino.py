import logging

from aiogram import F, Router
from aiogram.types import CallbackQuery
from stp_database import Employee
from stp_database.repo.STP.requests import MainRequestsRepo

from tgbot.filters.role import HeadFilter
from tgbot.keyboards.head.group.game.casino import (
    HeadCasinoToggleAll,
    HeadCasinoUserToggle,
    head_casino_management_kb,
)
from tgbot.keyboards.head.group.game.main import HeadGameMenu
from tgbot.keyboards.head.group.members import short_name

head_game_casino_router = Router()
head_game_casino_router.callback_query.filter(
    F.message.chat.type == "private", HeadFilter()
)

logger = logging.getLogger(__name__)


@head_game_casino_router.callback_query(HeadGameMenu.filter(F.menu == "casino"))
async def head_casino_menu(
    callback: CallbackQuery, user: Employee, stp_repo: MainRequestsRepo
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–∑–∏–Ω–æ –º–µ–Ω—é –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π
    """
    if not user:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
    group_members = await stp_repo.employee.get_users_by_head(user.fullname)

    if not group_members:
        await callback.message.edit_text(
            """üé≤ <b>–ö–∞–∑–∏–Ω–æ</b>

–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ

<i>–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</i>""",
            reply_markup=head_casino_management_kb([]),
        )
        return

    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∑–∏–Ω–æ
    enabled_count = sum(1 for member in group_members if member.is_casino_allowed)
    total_count = len(group_members)

    message_text = f"""üé≤ <b>–ö–∞–∑–∏–Ω–æ</b>

<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥—Ä—É–ø–ø—ã:</b>
üü¢ –†–∞–∑—Ä–µ—à–µ–Ω–æ: {enabled_count} —á–µ–ª–æ–≤–µ–∫
üü† –ó–∞–ø—Ä–µ—â–µ–Ω–æ: {total_count - enabled_count} —á–µ–ª–æ–≤–µ–∫
üë• –í—Å–µ–≥–æ –≤ –≥—Ä—É–ø–ø–µ: {total_count} —á–µ–ª–æ–≤–µ–∫

<i>–ù–∞–∂–º–∏ –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ –¥–æ—Å—Ç—É–ø–∞</i>"""

    await callback.message.edit_text(
        message_text,
        reply_markup=head_casino_management_kb(group_members),
    )
    logger.info(
        f"[–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å] - [–ö–∞–∑–∏–Ω–æ] {callback.from_user.username} ({callback.from_user.id}): –û—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–∑–∏–Ω–æ"
    )


@head_game_casino_router.callback_query(HeadCasinoUserToggle.filter())
async def toggle_user_casino_access(
    callback: CallbackQuery,
    callback_data: HeadCasinoUserToggle,
    user: Employee,
    stp_repo: MainRequestsRepo,
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–∑–∏–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    if not user:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
        return

    member = await stp_repo.employee.get_user(main_id=callback_data.user_id)

    if not member:
        await callback.answer("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫ –≤ –≥—Ä—É–ø–ø–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
    group_members = await stp_repo.employee.get_users_by_head(user.fullname)
    if not any(m.id == member.id for m in group_members):
        await callback.answer("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –≤ –≤–∞—à–µ–π –≥—Ä—É–ø–ø–µ", show_alert=True)
        return

    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–∑–∏–Ω–æ
    new_status = not member.is_casino_allowed
    await stp_repo.employee.update_user(
        user_id=member.user_id, is_casino_allowed=new_status
    )

    status_text = "—Ä–∞–∑—Ä–µ—à–µ–Ω" if new_status else "–∑–∞–ø—Ä–µ—â–µ–Ω"
    emoji_status = "üü¢" if new_status else "üü†"

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await head_casino_menu(callback, user, stp_repo)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    await callback.answer(
        f"{emoji_status} {short_name(member.fullname)}: –¥–æ—Å—Ç—É–ø –∫ –∫–∞–∑–∏–Ω–æ {status_text}"
    )

    logger.info(
        f"[–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å] - [–ö–∞–∑–∏–Ω–æ] {callback.from_user.username} ({callback.from_user.id}): –ò–∑–º–µ–Ω–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–∞–∑–∏–Ω–æ –¥–ª—è {member.fullname}: {status_text}"
    )


@head_game_casino_router.callback_query(HeadCasinoToggleAll.filter())
async def toggle_all_casino_access(
    callback: CallbackQuery,
    callback_data: HeadCasinoToggleAll,
    user: Employee,
    stp_repo: MainRequestsRepo,
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–∑–∏–Ω–æ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥—Ä—É–ø–ø—ã
    """
    if not user:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
    group_members = await stp_repo.employee.get_users_by_head(user.fullname)

    if not group_members:
        await callback.answer("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return

    action = callback_data.action
    changes_count = 0

    for member in group_members:
        if not member.user_id:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
            continue

        new_status = None
        if action == "enable_all":
            if not member.is_casino_allowed:
                new_status = True
        elif action == "disable_all":
            if member.is_casino_allowed:
                new_status = False
        elif action == "toggle_all":
            new_status = not member.is_casino_allowed

        if new_status is not None:
            await stp_repo.employee.update_user(
                user_id=member.user_id, is_casino_allowed=new_status
            )
            changes_count += 1

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await head_casino_menu(callback, user, stp_repo)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if action == "enable_all":
        action_text = "—Ä–∞–∑—Ä–µ—à–µ–Ω"
        emoji = "üü¢"
    elif action == "disable_all":
        action_text = "–∑–∞–ø—Ä–µ—â–µ–Ω"
        emoji = "üü†"
    else:
        action_text = "–∏–∑–º–µ–Ω–µ–Ω"
        emoji = "üîÑ"

    await callback.answer(
        f"{emoji} –î–æ—Å—Ç—É–ø –∫ –∫–∞–∑–∏–Ω–æ {action_text} –¥–ª—è {changes_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
    )

    logger.info(
        f"[–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å] - [–ö–∞–∑–∏–Ω–æ] {callback.from_user.username} ({callback.from_user.id}): –ú–∞—Å—Å–æ–≤–æ –∏–∑–º–µ–Ω–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∫–∞–∑–∏–Ω–æ –¥–ª—è {changes_count} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ({action})"
    )
