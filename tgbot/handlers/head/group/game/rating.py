import logging

from aiogram import F, Router
from aiogram.exceptions import TelegramBadRequest
from aiogram.types import CallbackQuery

from infrastructure.database.models import Employee
from infrastructure.database.repo.STP.requests import MainRequestsRepo
from tgbot.filters.role import HeadFilter
from tgbot.keyboards.head.group.game.main import HeadGameMenu
from tgbot.keyboards.head.group.game.rating import game_balance_rating_kb
from tgbot.keyboards.head.group.members import short_name

head_group_game_rating_router = Router()
head_group_game_rating_router.message.filter(F.chat.type == "private", HeadFilter())
head_group_game_rating_router.callback_query.filter(
    F.message.chat.type == "private", HeadFilter()
)

logger = logging.getLogger(__name__)


async def format_balance_rating_message(
    group_members, stp_repo: MainRequestsRepo
) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≥—Ä—É–ø–ø—ã –ø–æ –±–∞–ª–∞–Ω—Å—É"""

    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
    balance_data = []

    for member in group_members:
        if member.user_id:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å user_id
            balance = await stp_repo.transaction.get_user_balance(member.user_id)
            balance_data.append({"member": member, "balance": balance})

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –±–∞–ª–∞–Ω—Å—É (–±–æ–ª—å—à–µ = –ª—É—á—à–µ)
    balance_data.sort(key=lambda x: x["balance"], reverse=True)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = "üéñÔ∏è <b>–†–µ–π—Ç–∏–Ω–≥ –≥—Ä—É–ø–ø—ã –ø–æ –±–∞–ª–∞–Ω—Å—É</b>\n\n"

    if not balance_data:
        message += "<i>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –±–∞–ª–∞–Ω—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</i>"
    else:
        for i, data in enumerate(balance_data, 1):
            member = data["member"]
            balance = data["balance"]

            # –≠–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–∑–∏—Ü–∏–π
            if i == 1:
                position_emoji = "ü•á"
            elif i == 2:
                position_emoji = "ü•à"
            elif i == 3:
                position_emoji = "ü•â"
            else:
                position_emoji = f"{i}."

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Ä–µ–π—Ç–∏–Ω–≥–∞
            if member.username:
                member_link = f"<a href='t.me/{member.username}'>{short_name(member.fullname)}</a>"
            else:
                member_link = short_name(member.fullname)

            message += f"{position_emoji} <b>{member_link}</b>\n"
            message += f"{balance} –±–∞–ª–ª–æ–≤\n"

    return message


@head_group_game_rating_router.callback_query(HeadGameMenu.filter(F.menu == "rating"))
async def group_balance_rating_cb(
    callback: CallbackQuery,
    user: Employee,
    stp_repo: MainRequestsRepo,
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≥—Ä—É–ø–ø—ã –ø–æ –±–∞–ª–∞–Ω—Å—É"""
    if not user:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞</b>\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —ç—Ç–æ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
    group_members = await stp_repo.employee.get_users_by_head(user.fullname)

    if not group_members:
        await callback.message.edit_text(
            "üéñÔ∏è <b>–†–µ–π—Ç–∏–Ω–≥ –≥—Ä—É–ø–ø—ã –ø–æ –±–∞–ª–∞–Ω—Å—É</b>\n\n–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ\n\n<i>–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</i>",
            reply_markup=game_balance_rating_kb(),
        )
        return

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
        message_text = await format_balance_rating_message(group_members, stp_repo)

        await callback.message.edit_text(
            message_text,
            reply_markup=game_balance_rating_kb(),
        )

        logger.info(
            f"[–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å] - [–†–µ–π—Ç–∏–Ω–≥ –±–∞–ª–∞–Ω—Å–∞] {callback.from_user.username} ({callback.from_user.id}): –û—Ç–∫—Ä—ã—Ç —Ä–µ–π—Ç–∏–Ω–≥ –≥—Ä—É–ø–ø—ã –ø–æ –±–∞–ª–∞–Ω—Å—É"
        )

    except TelegramBadRequest:
        await callback.answer("–û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≥—Ä—É–ø–ø—ã –ø–æ –±–∞–ª–∞–Ω—Å—É: {e}")
        await callback.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞", show_alert=True
        )
