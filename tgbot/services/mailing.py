"""–°–µ—Ä–≤–∏—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ email –ø–∏—Å–µ–º."""

import logging
import smtplib
import ssl
from email.header import Header
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

from infrastructure.database.models import Employee, Product
from infrastructure.database.models.STP.purchase import Purchase
from tgbot.config import load_config

config = load_config(".env")

logger = logging.getLogger(__name__)


async def send_email(
    addresses: list[str] | str, subject: str, body: str, html: bool = True
) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ email.

    Args:
        addresses: –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
        subject: –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∏—Å—å–º–∞
        body: –¢–µ–ª–æ –ø–∏—Å—å–º–∞
        html: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    """
    context = ssl.create_default_context()

    msg = MIMEMultipart()
    msg["From"] = config.mail.user
    msg["To"] = ", ".join(addresses) if isinstance(addresses, list) else addresses
    msg["Subject"] = Header(subject, "utf-8")

    content_type = "html" if html else "plain"
    msg.attach(MIMEText(body, content_type, "utf-8"))

    try:
        with smtplib.SMTP_SSL(
            host=config.mail.host, port=config.mail.port, context=context
        ) as server:
            server.login(user=config.mail.user, password=config.mail.password)
            server.sendmail(
                from_addr=config.mail.user, to_addrs=addresses, msg=msg.as_string()
            )
    except smtplib.SMTPException as e:
        logger.error(f"[Email] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞: {e}")


async def send_auth_email(code: str, email: str, bot_username: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ —Å –∫–æ–¥–æ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

    Args:
        code: –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        email: –ü–æ—á—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞
        bot_username: –Æ–∑–µ—Ä–Ω–µ–π–º –±–æ—Ç–∞ Telegram (–¥–ª—è –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏)
    """
    email_subject = "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –±–æ—Ç–µ"
    email_content = f"""–î–æ–±—Ä—ã–π –¥–µ–Ω—å<br><br>

–ö–æ–¥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: <b>{code}</b><br>
–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –≤ –±–æ—Ç–∞ <a href="https://t.me/{bot_username}">@{bot_username}</a> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""

    await send_email(addresses=email, subject=email_subject, body=email_content)


async def send_activation_product_email(
    user: Employee,
    user_head: Employee | None,
    current_duty: Employee | None,
    product: Product,
    purchase: Purchase,
    bot_username: str,
) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.

    Args:
        user: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–æ–¥–µ–ª—å—é Employee. –°–æ—Ç—Ä—É–¥–Ω–∏–∫, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–∏–π –ø—Ä–µ–¥–º–µ—Ç
        user_head: –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç
        current_duty: –¢–µ–∫—É—â–∏–π –¥–µ–∂—É—Ä–Ω—ã–π
        product: –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç
        purchase: –ü–æ–∫—É–ø–∫–∞, –≤ —Ä–∞–º–∫–∞—Ö –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –ø—Ä–µ–¥–º–µ—Ç
        bot_username: –Æ–∑–µ—Ä–Ω–µ–π–º –±–æ—Ç–∞ Telegram
    """
    email_subject = "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞"
    email_content = f"""–î–æ–±—Ä—ã–π –¥–µ–Ω—å!<br><br>

<b>{user.fullname}</b>{f' (<a href="https://t.me/{user.username}">@{user.username}</a>)' if user.username else ""} –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é <b>{product.name}</b><br>
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {product.description}<br>
üìç –ê–∫—Ç–∏–≤–∞—Ü–∏–π: <b>{purchase.usage_count + 1}</b> –∏–∑ <b>{product.count}</b><br><br>

–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <a href="https://t.me/{bot_username}">–°–¢–ü—à–µ—Ä–∞</a>"""

    email = []

    match product.manager_role:
        case 3:
            if user.division == "–ù–¶–ö":
                # –†–∞—Å—Å—ã–ª–∫–∞ –†–ì –ù–¶–ö
                email.append(config.mail.nck_email_addr)
            else:
                # –†–∞—Å—Å—ã–ª–∫–∞ –†–ì –ù–¢–ü
                email.append(config.mail.ntp_email_addr)
        case 5:
            # –†–∞—Å—Å—ã–ª–∫–∞ –ì–û–ö
            email.append(config.mail.gok_email_addr)
        case 6:
            # –†–∞—Å—Å—ã–ª–∫–∞ –ú–ò–ü
            email.append(config.mail.mip_email_addr)

    # –ü–æ—á—Ç–∞ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    if user_head and user_head.email:
        email.append(user_head.email)

    # –ü–æ—á—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–∂—É—Ä–Ω–æ–≥–æ
    if current_duty and current_duty.email:
        email.append(current_duty.email)

    # –ü–æ—á—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç
    email.append(user.email)

    await send_email(addresses=email, subject=email_subject, body=email_content)
    logger.info(
        f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ {product.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.fullname} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {email}"
    )


async def send_cancel_product_email(
    user: Employee,
    user_head: Employee | None,
    current_duty: Employee | None,
    product: Product,
    purchase: Purchase,
    bot_username: str,
) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ–± –æ—Ç–º–µ–Ω–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.

    Args:
        user: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –º–æ–¥–µ–ª—å—é Employee. –°–æ—Ç—Ä—É–¥–Ω–∏–∫, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–∏–π –ø—Ä–µ–¥–º–µ—Ç
        user_head: –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç
        current_duty: –¢–µ–∫—É—â–∏–π –¥–µ–∂—É—Ä–Ω—ã–π
        product: –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç
        purchase: –ü–æ–∫—É–ø–∫–∞, –≤ —Ä–∞–º–∫–∞—Ö –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –ø—Ä–µ–¥–º–µ—Ç
        bot_username: –Æ–∑–µ—Ä–Ω–µ–π–º –±–æ—Ç–∞ Telegram
    """
    email_subject = "–û—Ç–º–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏"
    email_content = f"""–î–æ–±—Ä—ã–π –¥–µ–Ω—å!<br><br>

<b>{user.fullname}</b>{f' (<a href="https://t.me/{user.username}">@{user.username}</a>)' if user.username else ""} –æ—Ç–º–µ–Ω–∏–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ <b>{product.name}</b><br>
üìù –û–ø–∏—Å–∞–Ω–∏–µ: {product.description}<br>
üìç –ê–∫—Ç–∏–≤–∞—Ü–∏–π: <b>{purchase.usage_count}</b> –∏–∑ <b>{product.count}</b><br><br>

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ <a href="https://t.me/{bot_username}">–°–¢–ü—à–µ—Ä–∞</a>"""

    email = []
    match product.manager_role:
        case 3:
            if user.division == "–ù–¶–ö":
                # –†–∞—Å—Å—ã–ª–∫–∞ –†–ì –ù–¶–ö
                email.append(config.mail.nck_email_addr)
            else:
                # –†–∞—Å—Å—ã–ª–∫–∞ –†–ì –ù–¢–ü
                email.append(config.mail.ntp_email_addr)
        case 5:
            # –†–∞—Å—Å—ã–ª–∫–∞ –ì–û–ö
            email.append(config.mail.gok_email_addr)
        case 6:
            # –†–∞—Å—Å—ã–ª–∫–∞ –ú–ò–ü
            email.append(config.mail.mip_email_addr)

    # –ü–æ—á—Ç–∞ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    if user_head and user_head.email:
        email.append(user_head.email)

    # –ü–æ—á—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–∂—É—Ä–Ω–æ–≥–æ
    if current_duty and current_duty.email:
        email.append(current_duty.email)

    # –ü–æ—á—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–≤—à–µ–≥–æ –ø—Ä–µ–¥–º–µ—Ç
    email.append(user.email)

    await send_email(addresses=email, subject=email_subject, body=email_content)
    logger.info(
        f"[–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ {product.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.fullname} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ {email}"
    )
