from aiogram_dialog import DialogManager

from infrastructure.database.models import Employee
from infrastructure.database.repo.STP.requests import MainRequestsRepo


async def on_activation_click(
    callback, widget, dialog_manager: DialogManager, item_id, **kwargs
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä—É
    """

    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]

    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
        purchase_details = await stp_repo.purchase.get_purchase_details(item_id)

        if not purchase_details:
            await callback.answer("‚ùå –ü–æ–∫—É–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
            return

        purchase = purchase_details.user_purchase
        product = purchase_details.product_info

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        purchase_user: Employee = await stp_repo.employee.get_user(
            user_id=purchase.user_id
        )
        purchase_user_head: Employee = (
            await stp_repo.employee.get_user(fullname=purchase_user.head)
            if purchase_user and purchase_user.head
            else None
        )

        user_info = (
            f"<a href='t.me/{purchase_user.username}'>{purchase_user.fullname}</a>"
            if purchase_user and purchase_user.username
            else purchase_user.fullname
            if purchase_user
            else f"ID: {purchase.user_id}"
        )

        head_info = (
            f"<a href='t.me/{purchase_user_head.username}'>{purchase_user.head}</a>"
            if purchase_user_head and purchase_user_head.username
            else purchase_user.head
            if purchase_user and purchase_user.head
            else "-"
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤ dialog_data
        dialog_manager.dialog_data["selected_activation"] = {
            "purchase_id": purchase.id,
            "product_name": product.name,
            "product_description": product.description,
            "product_cost": product.cost,
            "product_count": product.count,
            "product_division": product.division,
            "bought_at": purchase.bought_at.strftime("%d.%m.%Y –≤ %H:%M"),
            "usage_count": purchase.usage_count,
            "user_name": user_info,
            "fullname": purchase_user.fullname,
            "user_division": purchase_user.division if purchase_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            "user_position": purchase_user.position if purchase_user else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            "user_head": head_info,
            "user_username": purchase_user.username if purchase_user else None,
            "user_id": purchase_user.user_id if purchase_user else purchase.user_id,
        }

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–∫–Ω—É –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        current_state = dialog_manager.current_context().state
        state_group = current_state.group

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä—É –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
        await dialog_manager.switch_to(getattr(state_group, "game_activation_detail"))

    except Exception as e:
        print(f"Error in on_activation_click: {e}")
        await callback.answer(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", show_alert=True
        )


async def on_approve_activation(
    callback, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]
    activation_info = dialog_manager.dialog_data["selected_activation"]

    try:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
        await stp_repo.purchase.approve_purchase_usage(
            purchase_id=activation_info["purchase_id"],
            updated_by_user_id=callback.from_user.id,
        )

        await callback.answer(
            f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{activation_info['product_name']}' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç {activation_info['fullname']} –±—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞",
            show_alert=True,
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if activation_info["usage_count"] >= activation_info["product_count"]:
            employee_notify_message = f"""<b>üëå –ü—Ä–µ–¥–º–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä <a href='t.me/{user.username}'>{user.fullname}</a> –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞

–£ <b>{activation_info["product_name"]}</b> –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π

<i>–ö—É–ø–∏—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –º–æ–∂–Ω–æ –≤ <b>üíé –ú–∞–≥–∞–∑–∏–Ω–µ</b></i>"""
        else:
            remaining_uses = (
                activation_info["product_count"] - activation_info["usage_count"]
            )
            employee_notify_message = f"""<b>üëå –ü—Ä–µ–¥–º–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä <a href='t.me/{user.username}'>{user.fullname}</a> –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø—Ä–µ–¥–º–µ—Ç–∞

üìç –û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∞—Ü–∏–π: {remaining_uses} –∏–∑ {activation_info["product_count"]}"""

        await callback.bot.send_message(
            chat_id=activation_info["user_id"],
            text=employee_notify_message,
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–π
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        current_state = dialog_manager.current_context().state
        state_group = current_state.group

        await dialog_manager.switch_to(getattr(state_group, "game_products_activation"))

    except Exception as e:
        print(f"Error in on_approve_activation: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", show_alert=True)


async def on_reject_activation(
    callback, widget, dialog_manager: DialogManager, **kwargs
):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    """
    stp_repo: MainRequestsRepo = dialog_manager.middleware_data["stp_repo"]
    user: Employee = dialog_manager.middleware_data["user"]
    activation_info = dialog_manager.dialog_data["selected_activation"]

    try:
        # –û—Ç–∫–ª–æ–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
        await stp_repo.purchase.reject_purchase_usage(
            purchase_id=activation_info["purchase_id"],
            updated_by_user_id=callback.from_user.id,
        )

        await callback.answer(
            f"‚ùå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{activation_info['product_name']}' –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n\n–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç {activation_info['fullname']} –±—ã–ª —É–≤–µ–¥–æ–º–ª–µ–Ω –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞",
            show_alert=True,
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        employee_notify_message = f"""<b>–ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞:</b> {activation_info["product_name"]}

–ú–µ–Ω–µ–¥–∂–µ—Ä <a href='t.me/{user.username}'>{user.fullname}</a> –æ—Ç–º–µ–Ω–∏–ª –∞–∫—Ç–∏–≤–∞—Ü–∏—é <b>{activation_info["product_name"]}</b>

<i>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω–æ</i>"""

        await callback.bot.send_message(
            chat_id=activation_info["user_id"],
            text=employee_notify_message,
        )

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–π
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≥—Ä—É–ø–ø—É —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        current_state = dialog_manager.current_context().state
        state_group = current_state.group

        await dialog_manager.switch_to(getattr(state_group, "game_products_activation"))

    except Exception as e:
        print(f"Error in on_reject_activation: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏", show_alert=True)
